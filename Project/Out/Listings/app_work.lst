C51 COMPILER V9.56.0.0   APP_WORK                                                          07/11/2017 22:20:47 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE APP_WORK
OBJECT MODULE PLACED IN .\Out\Objects\app_work.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\App\src\app_work.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Common\in
                    -c;..\App\inc;..\Bsp\inc;..\Startup;..\Bsp) DEFINE(FOSC_110592) DEBUG OBJECTEXTEND PRINT(.\Out\Listings\app_work.lst) OBJ
                    -ECT(.\Out\Objects\app_work.obj)

line level    source

   1          /*
   2           * app_work.c
   3           *
   4           *  Created on: 2017Äê7ÔÂ6ÈÕ
   5           *      Author: admin
   6           */
   7          
   8          #include "app.h"
   9          
  10          #define BEEP_SHORT_TIME  5
  11          #define BEEP_LONG_TIME  15
  12          #define CAL_a 2
  13          
  14          const uint8_t Rep_Pull_num[4][2] = { { 10, 20 }, { 20, 25 }, { 30, 30 }, { 50,
  15                          40 } };
  16          
  17          WORK_T g_tWork;
  18          static uint8_t count_NoAction = 0;
  19          static BIT pull_once_flag = 0;
  20          
  21          static void app_work_pro(void);
  22          
  23          void work_Init(void) {
  24   1              g_tWork.mode = E_Simple_metering_mode;
  25   1              g_tWork.reps_mode = '\0';
  26   1              g_tWork.sum = 0;
  27   1              g_tWork.reps_num = 0;
  28   1              g_tWork.pulls_num = 0;
  29   1              g_tWork.cal_num = 0;
  30   1      
  31   1              count_NoAction = 0;
  32   1      }
  33          
  34          void query_work_sum(void) {
  35   1              g_tWork.sum++;
  36   1              if (g_tWork.sum > 10000) {
  37   2                      g_tWork.sum = 0;
  38   2              }
  39   1              pull_once_flag = 1;
  40   1      
  41   1      }
  42          
  43          void app_work_1s_pro(void) {
  44   1              if (count_NoAction < 255) {
  45   2                      count_NoAction++;
  46   2              }
  47   1      
  48   1      }
  49          void app_work_100ms_pro(void) {
  50   1              if (pull_once_flag) {
  51   2                      pull_once_flag = 0;
  52   2                      ///////////////////
  53   2                      app_work_pro();
C51 COMPILER V9.56.0.0   APP_WORK                                                          07/11/2017 22:20:47 PAGE 2   

  54   2              }
  55   1      
  56   1      }
  57          
  58          static void app_work_pro(void) {
  59   1              static BIT finish_flag = 0;
  60   1              static BIT reps_num_appear_flag = 0;
  61   1      
  62   1              switch (g_tWork.mode) {
  63   2              case E_Simple_metering_mode:
  64   2      
  65   2                      if (g_tWork.sum % 10 == 0) {
  66   3                              BEEP_Start(0, BEEP_LONG_TIME, 1, 1);
  67   3                      } else {
  68   3                              BEEP_Start(0, BEEP_SHORT_TIME, 1, 1);
  69   3                      }
  70   2                      reps_num_appear_flag = 0;
  71   2                      g_tWork.pulls_num = g_tWork.sum;
  72   2                      g_tWork.cal_num = g_tWork.sum * CAL_a;
  73   2                      break;
  74   2              case E_Quick_start_mode:
  75   2      
  76   2                      if (finish_flag) {
  77   3                              BEEP_Start(0, BEEP_SHORT_TIME, 1, 1);
  78   3                              g_tWork.sum = Rep_Pull_num[g_tWork.reps_mode - 'A'][0]
  79   3                                              * Rep_Pull_num[g_tWork.reps_mode - 'A'][1];
  80   3                      } else {
  81   3                              if (g_tWork.sum
  82   3                                              == Rep_Pull_num[g_tWork.reps_mode - 'A'][0]
  83   3                                                              * Rep_Pull_num[g_tWork.reps_mode - 'A'][1]) {
  84   4                                      finish_flag = 1;
  85   4                                      BEEP_Start(0, 3 * BEEP_SHORT_TIME, 1, 1);
  86   4                              } else {
  87   4                                      if (g_tWork.sum % Rep_Pull_num[g_tWork.reps_mode - 'A'][1]
  88   4                                                      == 0) {
  89   5                                              BEEP_Start(0, BEEP_SHORT_TIME, BEEP_SHORT_TIME, 3);
  90   5                                      } else {
  91   5                                              BEEP_Start(0, BEEP_SHORT_TIME, 1, 1);
  92   5                                      }
  93   4                              }
  94   3                              reps_num_appear_flag = 1;
  95   3                              g_tWork.reps_num = g_tWork.sum
  96   3                                              / Rep_Pull_num[g_tWork.reps_mode - 'A'][1];
  97   3                              g_tWork.pulls_num = g_tWork.sum
  98   3                                              % Rep_Pull_num[g_tWork.reps_mode - 'A'][1];
  99   3                              g_tWork.cal_num = g_tWork.sum * CAL_a;
 100   3                      }
 101   2      
 102   2                      break;
 103   2              case E_Coach_mode:
 104   2      
 105   2                      break;
 106   2              }
 107   1              if (reps_num_appear_flag) {
 108   2                      LCD_Show_REP_Num(g_tWork.reps_num);
 109   2              } else {
 110   2                      LCD_Clear_REP_Num();
 111   2              }
 112   1              LCD_Show_Pulls_Num(g_tWork.pulls_num);
 113   1              LCD_Show_CAL_Num(g_tWork.cal_num);
 114   1      
 115   1      }
C51 COMPILER V9.56.0.0   APP_WORK                                                          07/11/2017 22:20:47 PAGE 3   

 116          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    548    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     18    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
