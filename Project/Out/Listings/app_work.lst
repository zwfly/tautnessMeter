C51 COMPILER V9.56.0.0   APP_WORK                                                          07/12/2017 22:47:51 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE APP_WORK
OBJECT MODULE PLACED IN .\Out\Objects\app_work.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\App\src\app_work.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Common\in
                    -c;..\App\inc;..\Bsp\inc;..\Startup;..\Bsp) DEFINE(FOSC_110592) DEBUG OBJECTEXTEND PRINT(.\Out\Listings\app_work.lst) OBJ
                    -ECT(.\Out\Objects\app_work.obj)

line level    source

   1          /*
   2           * app_work.c
   3           *
   4           *  Created on: 2017Äê7ÔÂ6ÈÕ
   5           *      Author: admin
   6           */
   7          
   8          #include "app.h"
   9          
  10          #define BEEP_SHORT_TIME  5
  11          #define BEEP_LONG_TIME  15
  12          #define COACH_DELAY_TIME 300
  13          #define CAL_a 2
  14          
  15          const uint8_t Rep_Pull_num[4][2] = { { 10, 20 }, { 20, 25 }, { 30, 30 }, { 50,
  16                          40 } };
  17          
  18          WORK_T g_tWork;
  19          static uint8_t count_NoAction = 0;
  20          static BIT pull_once_flag = 0;
  21          
  22          static void app_work_pro(void);
  23          
  24          void work_Init(void) {
  25   1              g_tWork.mode = E_Simple_metering_mode;
  26   1              g_tWork.reps_mode = '\0';
  27   1              g_tWork.sum = 0;
  28   1              g_tWork.reps_num = 0;
  29   1              g_tWork.pulls_num = 0;
  30   1              g_tWork.cal_num = 0;
  31   1      
  32   1              count_NoAction = 0;
  33   1      }
  34          
  35          void query_work_sum(void) {
  36   1              g_tWork.sum++;
  37   1              if (g_tWork.sum > 10000) {
  38   2                      g_tWork.sum = 0;
  39   2              }
  40   1              pull_once_flag = 1;
  41   1      
  42   1      }
  43          
  44          void app_work_1s_pro(void) {
  45   1              if (count_NoAction < 255) {
  46   2                      count_NoAction++;
  47   2              }
  48   1      
  49   1      }
  50          void app_work_100ms_pro(void) {
  51   1              if (pull_once_flag) {
  52   2                      pull_once_flag = 0;
  53   2                      ///////////////////
C51 COMPILER V9.56.0.0   APP_WORK                                                          07/12/2017 22:47:51 PAGE 2   

  54   2                      app_work_pro();
  55   2              }
  56   1      
  57   1      }
  58          
  59          static void app_work_pro(void) {
  60   1              static BIT finish_flag = 0;
  61   1              static BIT reps_num_appear_flag = 0;
  62   1      
  63   1              switch (g_tWork.mode) {
  64   2              case E_Simple_metering_mode:
  65   2      
  66   2                      if (g_tWork.sum % 10 == 0) {
  67   3                              BEEP_Start(1, BEEP_LONG_TIME, 1, 1);
  68   3                      } else {
  69   3                              BEEP_Start(1, BEEP_SHORT_TIME, 1, 1);
  70   3                      }
  71   2                      reps_num_appear_flag = 0;
  72   2                      g_tWork.pulls_num = g_tWork.sum;
  73   2                      g_tWork.cal_num = g_tWork.sum * CAL_a;
  74   2                      break;
  75   2              case E_Quick_start_mode:
  76   2      
  77   2                      if (finish_flag) {
  78   3                              BEEP_Start(1, BEEP_SHORT_TIME, 1, 1);
  79   3                              g_tWork.sum = Rep_Pull_num[g_tWork.reps_mode - 'A'][0]
  80   3                                              * Rep_Pull_num[g_tWork.reps_mode - 'A'][1];
  81   3                      } else {
  82   3                              if (g_tWork.sum
  83   3                                              == Rep_Pull_num[g_tWork.reps_mode - 'A'][0]
  84   3                                                              * Rep_Pull_num[g_tWork.reps_mode - 'A'][1]) {
  85   4                                      finish_flag = 1;
  86   4                                      BEEP_Start(1, 3 * BEEP_SHORT_TIME, 1, 1);
  87   4                              } else {
  88   4                                      if (g_tWork.sum % Rep_Pull_num[g_tWork.reps_mode - 'A'][1]
  89   4                                                      == 0) {
  90   5                                              BEEP_Start(1, BEEP_SHORT_TIME, BEEP_SHORT_TIME, 3);
  91   5                                      } else {
  92   5                                              BEEP_Start(1, BEEP_SHORT_TIME, 1, 1);
  93   5                                      }
  94   4                              }
  95   3                              reps_num_appear_flag = 1;
  96   3                              g_tWork.reps_num = g_tWork.sum
  97   3                                              / Rep_Pull_num[g_tWork.reps_mode - 'A'][1];
  98   3                              g_tWork.pulls_num = g_tWork.sum
  99   3                                              % Rep_Pull_num[g_tWork.reps_mode - 'A'][1];
 100   3                              g_tWork.cal_num = g_tWork.sum * CAL_a;
 101   3                      }
 102   2      
 103   2                      break;
 104   2              case E_Coach_mode:
 105   2                      if (finish_flag) {
 106   3                              BEEP_Start(COACH_DELAY_TIME, BEEP_SHORT_TIME, 1, 1);
 107   3                              g_tWork.sum = Rep_Pull_num[g_tWork.reps_mode - 'A'][0]
 108   3                                              * Rep_Pull_num[g_tWork.reps_mode - 'A'][1];
 109   3                      } else {
 110   3                              if (g_tWork.sum
 111   3                                              == Rep_Pull_num[g_tWork.reps_mode - 'A'][0]
 112   3                                                              * Rep_Pull_num[g_tWork.reps_mode - 'A'][1]) {
 113   4                                      finish_flag = 1;
 114   4                                      BEEP_Start(1, 3 * BEEP_SHORT_TIME, 1, 1);
 115   4                              } else {
C51 COMPILER V9.56.0.0   APP_WORK                                                          07/12/2017 22:47:51 PAGE 3   

 116   4                                      if (g_tWork.sum % Rep_Pull_num[g_tWork.reps_mode - 'A'][1]
 117   4                                                      == 0) {
 118   5                                              BEEP_Start(1, BEEP_SHORT_TIME, BEEP_SHORT_TIME, 3);
 119   5                                      } else {
 120   5                                              BEEP_Start(COACH_DELAY_TIME, BEEP_SHORT_TIME, 1, 1);
 121   5                                      }
 122   4                              }
 123   3                              reps_num_appear_flag = 1;
 124   3                              g_tWork.reps_num = g_tWork.sum
 125   3                                              / Rep_Pull_num[g_tWork.reps_mode - 'A'][1];
 126   3                              g_tWork.pulls_num = g_tWork.sum
 127   3                                              % Rep_Pull_num[g_tWork.reps_mode - 'A'][1];
 128   3                              g_tWork.cal_num = g_tWork.sum * CAL_a;
 129   3                      }
 130   2                      break;
 131   2              }
 132   1              if (reps_num_appear_flag) {
 133   2                      LCD_Show_REP_Num(g_tWork.reps_num);
 134   2              } else {
 135   2                      LCD_Clear_REP_Num();
 136   2              }
 137   1              LCD_Show_Pulls_Num(g_tWork.pulls_num);
 138   1              LCD_Show_CAL_Num(g_tWork.cal_num);
 139   1      
 140   1      }
 141          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    847    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     18    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
