C51 COMPILER V9.56.0.0   APP_WORK                                                          09/22/2017 22:48:12 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE APP_WORK
OBJECT MODULE PLACED IN .\Out\Objects\app_work.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\App\src\app_work.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Common\in
                    -c;..\App\inc;..\Bsp\inc;..\Startup;..\Bsp) DEFINE(FOSC_110592) DEBUG OBJECTEXTEND PRINT(.\Out\Listings\app_work.lst) OBJ
                    -ECT(.\Out\Objects\app_work.obj)

line level    source

   1          /*
   2           * app_work.c
   3           *
   4           *  Created on: 2017年7月6日
   5           *      Author: admin
   6           */
   7          
   8          #include "app.h"
   9          #include <string.h>
  10          
  11          #define BEEP_SHORT_TIME   10
  12          #define BEEP_LONG_TIME    30
  13          #define COACH_DELAY_TIME  200
  14          #define COACH_PACE_TIME   400
  15          #define CAL_a 2
  16          
  17          const uint8_t Rep_Pull_num[4][2] = { { 10, 20 }, { 20, 25 }, { 30, 30 }, { 50,
  18                          40 } };
  19          
  20          static idata BEEP_T g_tBeep; /* 定义蜂鸣器全局结构体变量 */
  21          //static BEEP_T g_tBeep; /* 定义蜂鸣器全局结构体变量 */
  22          WORK_T g_tWork;
  23          static uint8_t count_NoAction = 0;
  24          static BIT pull_once_flag = 0;
  25          static BIT coach_mode_beep3_flag = 0;
  26          
  27          static void app_work_pro(void);
  28          
  29          void work_Init(void) {
  30   1              g_tWork.mode = E_Simple_metering_mode;
  31   1              g_tWork.reps_mode = 'A';
  32   1              g_tWork.sum = 0;
  33   1              g_tWork.reps_num = 0;
  34   1              g_tWork.pulls_num = 0;
  35   1              g_tWork.cal_num = 0;
  36   1      
  37   1              count_NoAction = 0;
  38   1      }
  39          
  40          void query_work_sum(void) {
  41   1      
  42   1              if (g_tDevice.level == E_LEVEL_PULL) {
  43   2                      g_tWork.sum++;
  44   2                      if (g_tWork.sum > 10000) {
  45   3                              g_tWork.sum = 0;
  46   3                      }
  47   2                      pull_once_flag = 1;
  48   2              }
  49   1      
  50   1              if (g_tDevice.level == E_LEVEL_READY) {
  51   2                      g_tDevice.level = E_LEVEL_PULL;
  52   2      
  53   2                      g_tWork.sum++;
C51 COMPILER V9.56.0.0   APP_WORK                                                          09/22/2017 22:48:12 PAGE 2   

  54   2                      if (g_tWork.sum > 10000) {
  55   3                              g_tWork.sum = 0;
  56   3                      }
  57   2                      pull_once_flag = 1;
  58   2              }
  59   1      }
  60          
  61          void app_work_1s_pro(void) {
  62   1              if (count_NoAction < 255) {
  63   2                      count_NoAction++;
  64   2              }
  65   1      
  66   1      }
  67          void app_work_100ms_pro(void) {
  68   1              static uint8_t coach_mode_beep3_cnt = 0;
  69   1      
  70   1              if (pull_once_flag) {
  71   2                      static BIT level_pull_init_flag = 0;
  72   2                      pull_once_flag = 0;
  73   2                      ///////////////////
  74   2                      app_key_clear_noOps_timeoutCnt();
  75   2                      app_work_pro();
  76   2      
  77   2                      if (g_tDevice.level == E_LEVEL_PULL) {
  78   3                              if (level_pull_init_flag == 0) {
  79   4                                      level_pull_init_flag = 1;
  80   4                                      BEEP_Start(1, BEEP_SHORT_TIME, COACH_PACE_TIME, 0);
  81   4                              }
  82   3                      } else {
  83   3                              level_pull_init_flag = 0;
  84   3                      }
  85   2              }
  86   1              if (coach_mode_beep3_flag) {
  87   2                      coach_mode_beep3_cnt++;
  88   2                      if (coach_mode_beep3_cnt > 6) {
  89   3                              coach_mode_beep3_flag = 0;
  90   3                              printf("coach set beep\n");
  91   3                              BEEP_Start_struct(&g_tBeep);
  92   3                      }
  93   2              } else {
  94   2                      coach_mode_beep3_cnt = 0;
  95   2              }
  96   1      }
  97          
  98          static void app_work_pro(void) {
  99   1              static BIT finish_flag = 0;
 100   1              static BIT reps_num_appear_flag = 0;
 101   1      
 102   1              switch (g_tWork.mode) {
 103   2              case E_TRAINING_NONE:
 104   2      
 105   2                      break;
 106   2              case E_Simple_metering_mode:
 107   2      
 108   2                      if (g_tWork.sum % 10 == 0) {
 109   3                              BEEP_Start(1, BEEP_LONG_TIME, 1, 1);
 110   3                      } else {
 111   3                              BEEP_Start(1, BEEP_SHORT_TIME, 1, 1);
 112   3                      }
 113   2                      g_tWork.pulls_num = g_tWork.sum;
 114   2                      g_tWork.cal_num = g_tWork.sum * CAL_a;
 115   2      
C51 COMPILER V9.56.0.0   APP_WORK                                                          09/22/2017 22:48:12 PAGE 3   

 116   2                      /********************/
 117   2                      LCD_Show_Pulls_Num(g_tWork.pulls_num);
 118   2                      LCD_Show_CAL_Num(g_tWork.cal_num);
 119   2      
 120   2                      LCD_Clear_REP_Num();
 121   2                      LCD_Clear_REP_ICO();
 122   2                      LCD_Clear_ABCD();
 123   2                      LCD_Clear_QS_ICO();
 124   2                      LCD_Clear_COACH_ICO();
 125   2      
 126   2                      LCD_Show_CAL_ICO();
 127   2                      LCD_Show_Line_up();
 128   2                      break;
 129   2              case E_Quick_start_mode:
 130   2      
 131   2                      if (finish_flag) {
 132   3                              BEEP_Start(1, BEEP_SHORT_TIME, 1, 1);
 133   3                              g_tWork.sum = Rep_Pull_num[g_tWork.reps_mode - 'A'][0]
 134   3                                              * Rep_Pull_num[g_tWork.reps_mode - 'A'][1];
 135   3                      } else {
 136   3                              if (g_tWork.sum
 137   3                                              == Rep_Pull_num[g_tWork.reps_mode - 'A'][0]
 138   3                                                              * Rep_Pull_num[g_tWork.reps_mode - 'A'][1]) {
 139   4                                      finish_flag = 1;
 140   4                                      BEEP_Start(1, 3 * BEEP_SHORT_TIME, 1, 1);
 141   4                              } else {
 142   4                                      if (g_tWork.sum % Rep_Pull_num[g_tWork.reps_mode - 'A'][1]
 143   4                                                      == 0) {
 144   5                                              BEEP_Start(1, BEEP_SHORT_TIME, BEEP_SHORT_TIME, 3);
 145   5                                      } else {
 146   5                                              BEEP_Start(1, BEEP_SHORT_TIME, 1, 1);
 147   5                                      }
 148   4                              }
 149   3                              reps_num_appear_flag = 1;
 150   3                              g_tWork.reps_num = g_tWork.sum
 151   3                                              / Rep_Pull_num[g_tWork.reps_mode - 'A'][1];
 152   3                              g_tWork.pulls_num = g_tWork.sum
 153   3                                              % Rep_Pull_num[g_tWork.reps_mode - 'A'][1];
 154   3                              g_tWork.cal_num = g_tWork.sum * CAL_a;
 155   3                      }
 156   2                      LCD_Show_REP_Num(g_tWork.reps_num);
 157   2                      LCD_Show_Pulls_Num(g_tWork.pulls_num);
 158   2                      LCD_Show_CAL_Num(g_tWork.cal_num);
 159   2      
 160   2                      LCD_Show_REP_ICO();
 161   2                      LCD_Show_ABCD(g_tWork.reps_mode);
 162   2      
 163   2                      LCD_Show_QS_ICO();
 164   2                      LCD_Clear_COACH_ICO();
 165   2      
 166   2                      LCD_Show_CAL_ICO();
 167   2                      LCD_Show_Line_up();
 168   2      
 169   2                      break;
 170   2              case E_Coach_mode:
 171   2                      if (finish_flag) {
 172   3                              BEEP_Start(COACH_DELAY_TIME, BEEP_SHORT_TIME, 1, 1);
 173   3                              g_tWork.sum = Rep_Pull_num[g_tWork.reps_mode - 'A'][0]
 174   3                                              * Rep_Pull_num[g_tWork.reps_mode - 'A'][1];
 175   3                      } else {
 176   3                              if (g_tWork.sum
 177   3                                              == Rep_Pull_num[g_tWork.reps_mode - 'A'][0]
C51 COMPILER V9.56.0.0   APP_WORK                                                          09/22/2017 22:48:12 PAGE 4   

 178   3                                                              * Rep_Pull_num[g_tWork.reps_mode - 'A'][1]) {
 179   4                                      finish_flag = 1;
 180   4                                      BEEP_Start(1, 3 * BEEP_SHORT_TIME, 1, 1);
 181   4                              } else {
 182   4                                      if (g_tWork.sum % Rep_Pull_num[g_tWork.reps_mode - 'A'][1]
 183   4                                                      == 0) {
 184   5                                              BEEP_T* beep_pt = 0;
 185   5                                              coach_mode_beep3_flag = 1;
 186   5                                              beep_pt = BEEP_Start_get();
 187   5                                              memcpy(&g_tBeep, beep_pt, sizeof(BEEP_T));
 188   5                                              printf("coach get beep\n");
 189   5                                              BEEP_Start(1, BEEP_SHORT_TIME, BEEP_SHORT_TIME, 3);
 190   5                                      } else {
 191   5      //                                      BEEP_Start(COACH_DELAY_TIME, BEEP_SHORT_TIME, 1, 1);
 192   5                                      }
 193   4                              }
 194   3                              reps_num_appear_flag = 1;
 195   3                              g_tWork.reps_num = g_tWork.sum
 196   3                                              / Rep_Pull_num[g_tWork.reps_mode - 'A'][1];
 197   3                              g_tWork.pulls_num = g_tWork.sum
 198   3                                              % Rep_Pull_num[g_tWork.reps_mode - 'A'][1];
 199   3                              g_tWork.cal_num = g_tWork.sum * CAL_a;
 200   3                      }
 201   2                      LCD_Show_REP_Num(g_tWork.reps_num);
 202   2                      LCD_Show_Pulls_Num(g_tWork.pulls_num);
 203   2                      LCD_Show_CAL_Num(g_tWork.cal_num);
 204   2      
 205   2                      LCD_Show_REP_ICO();
 206   2                      LCD_Show_ABCD(g_tWork.reps_mode);
 207   2      
 208   2                      LCD_Clear_QS_ICO();
 209   2                      LCD_Show_COACH_ICO();
 210   2      
 211   2                      LCD_Show_CAL_ICO();
 212   2                      LCD_Show_Line_up();
 213   2      
 214   2                      break;
 215   2              }
 216   1      
 217   1      #if 0
                      LCD_Show_Pulls_Num(g_tWork.pulls_num);
                      LCD_Show_CAL_Num(g_tWork.cal_num);
                      if (reps_num_appear_flag) {
                              LCD_Show_REP_Num(g_tWork.reps_num);
                      } else {
                              LCD_Clear_REP_Num();
                      }
              #endif
 226   1      }
 227          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1219    ----
   CONSTANT SIZE    =     32    ----
   XDATA SIZE       =     19       3
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =     15    ----
   BIT SIZE         =      5    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
