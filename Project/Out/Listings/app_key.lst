C51 COMPILER V9.56.0.0   APP_KEY                                                           08/23/2017 22:34:21 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE APP_KEY
OBJECT MODULE PLACED IN .\Out\Objects\app_key.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\App\src\app_key.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Common\inc
                    -;..\App\inc;..\Bsp\inc;..\Startup;..\Bsp) DEFINE(FOSC_110592) DEBUG OBJECTEXTEND PRINT(.\Out\Listings\app_key.lst) OBJEC
                    -T(.\Out\Objects\app_key.obj)

line level    source

   1          /*
   2           * app_key.c
   3           *
   4           *  Created on: 2017年7月7日
   5           *      Author: admin
   6           */
   7          
   8          #include "app.h"
   9          
  10          DEVICE_T g_tDevice;
  11          
  12          static E_TRAINING_MODE mode;
  13          static char letter = '\0';
  14          
  15          #define BLINK_FLASH_TIME   4
  16          
  17          /*
  18           * level: 0, 拉动时候的界面
  19           *        1,
  20           * */
  21          uint8_t level = 0;
  22          
  23          static void app_UI_init(void);
  24          
  25          void app_key_init(void) {
  26   1              level = 0;
  27   1      
  28   1              app_powerKeyInt_close();
  29   1              bsp_hallInt_open();
  30   1      
  31   1              mode = E_Simple_metering_mode;
  32   1              g_tWork.mode = E_Simple_metering_mode;
  33   1              g_tDevice.status = E_PowerOn;
  34   1              app_UI_init();
  35   1      }
  36          void app_powerKeyInt_open(void) {
  37   1      
  38   1              clr_PIPS2;
  39   1              clr_PIPS1;
  40   1              clr_PIPS0;
  41   1      
  42   1              set_PIT6;
  43   1              set_PINEN6;
  44   1              clr_PIPEN6;
  45   1      
  46   1      }
  47          void app_powerKeyInt_close(void) {
  48   1              clr_PIPS2;
  49   1              clr_PIPS1;
  50   1              clr_PIPS0;
  51   1      
  52   1              clr_PIT6;
  53   1              clr_PINEN6;
C51 COMPILER V9.56.0.0   APP_KEY                                                           08/23/2017 22:34:21 PAGE 2   

  54   1              clr_PIPEN6;
  55   1      }
  56          static void app_UI_init(void) {
  57   1              switch (mode) {
  58   2              case E_Simple_metering_mode:
  59   2      
  60   2                      LCD_Show_Pulls_Num(0);
  61   2                      LCD_Show_CAL_Num(0);
  62   2      
  63   2                      LCD_Show_Line_up();
  64   2                      LCD_Clear_REP_ICO();
  65   2      
  66   2                      LCD_Clear_ABCD();
  67   2      
  68   2                      LCD_Show_CAL_ICO();
  69   2                      LCD_Clear_QS_ICO();
  70   2                      LCD_Clear_COACH_ICO();
  71   2      
  72   2                      break;
  73   2              case E_Quick_start_mode:
  74   2      
  75   2                      LCD_Show_REP_ICO();
  76   2                      LCD_Show_Line_up();
  77   2      
  78   2                      LCD_Show_ABCD('A');
  79   2                      LCD_Show_ABCD('B');
  80   2                      LCD_Show_ABCD('C');
  81   2                      LCD_Show_ABCD('D');
  82   2      
  83   2                      LCD_Show_CAL_ICO();
  84   2      
  85   2                      LCD_Clear_COACH_ICO();
  86   2      
  87   2                      Repeat_Stop();
  88   2                      Repeat_SetStart(LCD_Show_QS_ICO);
  89   2                      Repeat_SetStop(LCD_Clear_QS_ICO);
  90   2                      Repeat_Start(4, 4, 0);
  91   2                      break;
  92   2              case E_Coach_mode:
  93   2                      LCD_Show_REP_ICO();
  94   2                      LCD_Show_Line_up();
  95   2      
  96   2                      LCD_Show_ABCD('A');
  97   2                      LCD_Show_ABCD('B');
  98   2                      LCD_Show_ABCD('C');
  99   2                      LCD_Show_ABCD('D');
 100   2      
 101   2                      LCD_Show_CAL_ICO();
 102   2      
 103   2                      LCD_Clear_QS_ICO();
 104   2      
 105   2                      Repeat_Stop();
 106   2                      Repeat_SetStart(LCD_Show_COACH_ICO);
 107   2                      Repeat_SetStop(LCD_Clear_COACH_ICO);
 108   2                      Repeat_Start(4, 4, 0);
 109   2                      break;
 110   2              }
 111   1      }
 112          
 113          void app_flash_Show(void) {
 114   1      
 115   1              LCD_Show_Line_up();
C51 COMPILER V9.56.0.0   APP_KEY                                                           08/23/2017 22:34:21 PAGE 3   

 116   1              switch (level) {
 117   2              case 0:
 118   2                      break;
 119   2              case 1:
 120   2                      if (mode == E_Quick_start_mode) {
 121   3                              LCD_Show_QS_ICO();
 122   3                      } else if (mode == E_Coach_mode) {
 123   3                              LCD_Show_COACH_ICO();
 124   3                      }
 125   2                      break;
 126   2              case 2:
 127   2      
 128   2                      switch (letter) {
 129   3                      case '\0':
 130   3                              break;
 131   3                      case 'A':
 132   3                              LCD_Show_REP_Num(Rep_Pull_num['A' - 'A'][0]);
 133   3                              LCD_Show_Pulls_Num(Rep_Pull_num['A' - 'A'][1]);
 134   3                              break;
 135   3                      case 'B':
 136   3                              LCD_Show_REP_Num(Rep_Pull_num['B' - 'A'][0]);
 137   3                              LCD_Show_Pulls_Num(Rep_Pull_num['B' - 'A'][1]);
 138   3                              break;
 139   3                      case 'C':
 140   3                              LCD_Show_REP_Num(Rep_Pull_num['C' - 'A'][0]);
 141   3                              LCD_Show_Pulls_Num(Rep_Pull_num['C' - 'A'][1]);
 142   3                              break;
 143   3                      case 'D':
 144   3                              LCD_Show_REP_Num(Rep_Pull_num['D' - 'A'][0]);
 145   3                              LCD_Show_Pulls_Num(Rep_Pull_num['D' - 'A'][1]);
 146   3                              break;
 147   3                      }
 148   2                      if (mode == E_Quick_start_mode) {
 149   3                              LCD_Show_QS_ICO();
 150   3                      } else if (mode == E_Coach_mode) {
 151   3                              LCD_Show_COACH_ICO();
 152   3                      }
 153   2                      LCD_Show_ABCD_all();
 154   2      
 155   2                      break;
 156   2              case 3:
 157   2                      break;
 158   2              }
 159   1              LCD_Show_Line_up();
 160   1      }
 161          void app_flash_Clear(void) {
 162   1      
 163   1              switch (level) {
 164   2              case 0:
 165   2                      break;
 166   2              case 1:
 167   2      //              LCD_Clear_ABCD();
 168   2      //              if (mode == E_Quick_start_mode) {
 169   2      //                      LCD_Clear_QS_ICO();
 170   2      //              } else if (mode == E_Coach_mode) {
 171   2      //                      LCD_Clear_COACH_ICO();
 172   2      //              }
 173   2      
 174   2                      LCD_Clear_QS_ICO();
 175   2                      LCD_Clear_COACH_ICO();
 176   2                      break;
 177   2              case 2:
C51 COMPILER V9.56.0.0   APP_KEY                                                           08/23/2017 22:34:21 PAGE 4   

 178   2      
 179   2                      if (letter == '\0') {
 180   3                              LCD_Clear_ABCD();
 181   3                      }
 182   2                      if (letter == 'A') {
 183   3                              LCD_Clear_ABCD();
 184   3                              LCD_Show_ABCD('A');
 185   3                      }
 186   2                      if (letter == 'B') {
 187   3                              LCD_Clear_ABCD();
 188   3                              LCD_Show_ABCD('B');
 189   3                      }
 190   2                      if (letter == 'C') {
 191   3                              LCD_Clear_ABCD();
 192   3                              LCD_Show_ABCD('C');
 193   3                      }
 194   2                      if (letter == 'D') {
 195   3                              LCD_Clear_ABCD();
 196   3                              LCD_Show_ABCD('D');
 197   3                      }
 198   2                      if (mode == E_Quick_start_mode) {
 199   3                              LCD_Clear_QS_ICO();
 200   3                      } else if (mode == E_Coach_mode) {
 201   3                              LCD_Clear_COACH_ICO();
 202   3                      }
 203   2                      break;
 204   2              case 3:
 205   2                      break;
 206   2              }
 207   1      
 208   1      }
 209          void app_key_power_or_return(void) {
 210   1      
 211   1              switch (level) {
 212   2              case 0:
 213   2                      switch (mode) {
 214   3                      case E_Simple_metering_mode:
 215   3                              g_tWork.sum = 0;
 216   3                              g_tWork.cal_num = 0;
 217   3      
 218   3                              LCD_Show_Pulls_Num(g_tWork.sum);
 219   3                              LCD_Show_CAL_Num(g_tWork.cal_num);
 220   3      
 221   3                              LCD_Show_Line_up();
 222   3                              LCD_Clear_REP_ICO();
 223   3      
 224   3                              LCD_Clear_ABCD();
 225   3      
 226   3                              LCD_Show_CAL_ICO();
 227   3                              LCD_Clear_QS_ICO();
 228   3                              LCD_Clear_COACH_ICO();
 229   3      
 230   3                              break;
 231   3                      case E_Quick_start_mode:
 232   3                              g_tWork.sum = 0;
 233   3                              g_tWork.cal_num = 0;
 234   3      
 235   3                              LCD_Show_REP_Num(0);
 236   3                              LCD_Show_Pulls_Num(0);
 237   3                              LCD_Show_CAL_Num(0);
 238   3      
 239   3                              LCD_Show_Line_up();
C51 COMPILER V9.56.0.0   APP_KEY                                                           08/23/2017 22:34:21 PAGE 5   

 240   3                              LCD_Show_REP_ICO();
 241   3      
 242   3                              LCD_Show_ABCD(g_tWork.reps_mode);
 243   3      
 244   3                              LCD_Show_CAL_ICO();
 245   3                              LCD_Show_QS_ICO();
 246   3                              LCD_Clear_COACH_ICO();
 247   3                              break;
 248   3                      case E_Coach_mode:
 249   3                              g_tWork.sum = 0;
 250   3                              g_tWork.cal_num = 0;
 251   3      
 252   3                              LCD_Show_REP_Num(0);
 253   3                              LCD_Show_Pulls_Num(0);
 254   3                              LCD_Show_CAL_Num(0);
 255   3      
 256   3                              LCD_Show_Line_up();
 257   3                              LCD_Show_REP_ICO();
 258   3      
 259   3                              LCD_Show_ABCD(g_tWork.reps_mode);
 260   3      
 261   3                              LCD_Show_CAL_ICO();
 262   3                              LCD_Clear_QS_ICO();
 263   3                              LCD_Show_COACH_ICO();
 264   3      
 265   3                              break;
 266   3                      }
 267   2                      break;
 268   2              case 1:
 269   2                      Repeat_Stop();
 270   2                      if (level) {
 271   3                              level--;
 272   3                      }
 273   2      
 274   2                      break;
 275   2              case 2:
 276   2                      if (level) {
 277   3                              level--;
 278   3                      }
 279   2                      break;
 280   2              case 3:
 281   2                      if (level) {
 282   3                              level--;
 283   3                      }
 284   2                      break;
 285   2              }
 286   1      
 287   1      }
 288          void app_key_set(void) {
 289   1      //      static BIT power_on_mode_flag = 0;
 290   1      
 291   1              switch (level) {
 292   2              case 0:
 293   2      
 294   2                      switch (g_tWork.mode) {
 295   3                      case E_Simple_metering_mode:
 296   3                              //g_tWork.mode = E_Quick_start_mode;
 297   3                              //mode = E_Quick_start_mode;
 298   3                              level = 1;
 299   3                              break;
 300   3                      case E_Quick_start_mode:
 301   3      
C51 COMPILER V9.56.0.0   APP_KEY                                                           08/23/2017 22:34:21 PAGE 6   

 302   3                              break;
 303   3                      case E_Coach_mode:
 304   3      
 305   3                              break;
 306   3                      }
 307   2      
 308   2                      LCD_Show_REP_Num(0);
 309   2                      LCD_Show_Pulls_Num(0);
 310   2                      LCD_Show_CAL_Num(0);
 311   2      
 312   2                      LCD_Show_Line_up();
 313   2                      LCD_Show_REP_ICO();
 314   2      
 315   2                      LCD_Show_ABCD_all();
 316   2      
 317   2                      LCD_Show_CAL_ICO();
 318   2      
 319   2                      mode = g_tWork.mode;
 320   2                      mode = E_Quick_start_mode;
 321   2                      level = 1;
 322   2                      Repeat_Stop();
 323   2                      Repeat_SetStart(app_flash_Show);
 324   2                      Repeat_SetStop(app_flash_Clear);
 325   2                      Repeat_Start(BLINK_FLASH_TIME, BLINK_FLASH_TIME, 0);
 326   2                      break;
 327   2              case 1:
 328   2      //              level = 2;
 329   2      
 330   2                      break;
 331   2              case 2:
 332   2                      break;
 333   2              case 3:
 334   2                      break;
 335   2              }
 336   1      
 337   1      //      app_UI_init();
 338   1      }
 339          
 340          void app_key_add(void) {
 341   1      
 342   1              switch (level) {
 343   2              case 0:
 344   2      
 345   2                      break;
 346   2              case 1:
 347   2                      switch (mode) {
 348   3                      case E_Simple_metering_mode:
 349   3                              mode = E_Quick_start_mode;
 350   3      
 351   3                              break;
 352   3                      case E_Quick_start_mode:
 353   3                              mode = E_Coach_mode;
 354   3      
 355   3                              break;
 356   3                      case E_Coach_mode:
 357   3      
 358   3                              mode = E_Simple_metering_mode;
 359   3      
 360   3                              break;
 361   3                      }
 362   2                      break;
 363   2              case 2:
C51 COMPILER V9.56.0.0   APP_KEY                                                           08/23/2017 22:34:21 PAGE 7   

 364   2                      switch (mode) {
 365   3                      case E_Simple_metering_mode:
 366   3      
 367   3                              break;
 368   3                      case E_Quick_start_mode:
 369   3      
 370   3                              if (letter == '\0') {
 371   4                                      letter = 'A';
 372   4                              } else {
 373   4                                      letter++;
 374   4                                      if (letter > 'D') {
 375   5                                              letter = 'A';
 376   5                                      }
 377   4                              }
 378   3      
 379   3                              break;
 380   3                      case E_Coach_mode:
 381   3                              if (letter == '\0') {
 382   4                                      letter = 'A';
 383   4                              } else {
 384   4                                      letter++;
 385   4                                      if (letter > 'D') {
 386   5                                              letter = 'A';
 387   5                                      }
 388   4                              }
 389   3                              break;
 390   3                      }
 391   2                      break;
 392   2              case 3:
 393   2                      break;
 394   2              }
 395   1      
 396   1      }
 397          void app_key_ok(void) {
 398   1              //g_tWork.mode = mode;
 399   1      
 400   1              switch (level) {
 401   2              case 0:
 402   2      
 403   2                      break;
 404   2              case 1:
 405   2      
 406   2                      switch (mode) {
 407   3                      case E_Simple_metering_mode:
 408   3      
 409   3                              break;
 410   3                      case E_Quick_start_mode:
 411   3      
 412   3                              LCD_Show_QS_ICO();
 413   3                              LCD_Clear_COACH_ICO();
 414   3      
 415   3                              break;
 416   3                      case E_Coach_mode:
 417   3                              LCD_Clear_QS_ICO();
 418   3                              LCD_Show_COACH_ICO();
 419   3      
 420   3                              break;
 421   3                      }
 422   2                      letter = 'A';
 423   2                      level = 2;
 424   2                      break;
 425   2              case 2:
C51 COMPILER V9.56.0.0   APP_KEY                                                           08/23/2017 22:34:21 PAGE 8   

 426   2                      switch (mode) {
 427   3                      case E_Simple_metering_mode:
 428   3      
 429   3                              break;
 430   3                      case E_Quick_start_mode:
 431   3      
 432   3                              Repeat_Stop();
 433   3                              LCD_Show_QS_ICO();
 434   3                              LCD_Clear_COACH_ICO();
 435   3      
 436   3                              break;
 437   3                      case E_Coach_mode:
 438   3      
 439   3                              break;
 440   3                      }
 441   2                      g_tWork.mode = mode;
 442   2                      g_tWork.reps_mode = letter;
 443   2                      g_tWork.sum = 0;
 444   2                      level = 0;
 445   2                      break;
 446   2              case 3:
 447   2                      break;
 448   2              }
 449   1      
 450   1      //      level++;
 451   1      //      if (level >= 3) {
 452   1      //              level = 0;
 453   1      //      }
 454   1      }
 455          
 456          void app_power_on(void) {
 457   1              SW_Reset();  //复位
 458   1      }
 459          void app_power_off(void) {
 460   1              lcd_bright_off();
 461   1              LCD_Clear_All();
 462   1      }
 463          
 464           uint8_t noOps_timeoutCnt = 0;
 465          static BIT offBight_flag = 0;
 466          //static BIT keyInvalid_flag = 0;
 467          void app_key_100ms_pro(void) {
 468   1              static uint8_t cnt = 0;
 469   1      
 470   1              if (g_tDevice.status == E_PowerDown) {
 471   2                      cnt++;
 472   2                      if (cnt >= 3) {
 473   3                              cnt = 0;
 474   3      
 475   3                              app_key_clear_noOps_timeoutCnt();
 476   3      //                      keyInvalid_flag = 1;
 477   3                              bsp_hallInt_close();
 478   3                              app_powerKeyInt_open();
 479   3                              set_PD;
 480   3                      }
 481   2              } else {
 482   2                      cnt = 0;
 483   2              }
 484   1      }
 485          
 486          void app_key_1s_pro(void) {
 487   1      
C51 COMPILER V9.56.0.0   APP_KEY                                                           08/23/2017 22:34:21 PAGE 9   

 488   1              noOps_timeoutCnt++;
 489   1              if (noOps_timeoutCnt == 20) {
 490   2                      offBight_flag = 1;
 491   2      //              keyInvalid_flag = 1;
 492   2                      lcd_bright_off();
 493   2                      printf("off bright\n");
 494   2              } else if (noOps_timeoutCnt == 30) {
 495   2                      app_power_off();
 496   2                      printf("power off\n");
 497   2                      g_tDevice.status = E_PowerDown;
 498   2              }
 499   1      
 500   1      }
 501          void app_key_clear_noOps_timeoutCnt(void) {
 502   1              noOps_timeoutCnt = 0;
 503   1      }
 504          void app_key_pro(uint8_t keyCode) {
 505   1      
 506   1              app_key_clear_noOps_timeoutCnt();
 507   1      
 508   1              if (offBight_flag && (g_tDevice.status == E_PowerOn)) {
 509   2                      offBight_flag = 0;
 510   2                      lcd_bright_on();
 511   2                      //      keyInvalid_flag = 1;
 512   2                      return;
 513   2              }
 514   1      
 515   1              switch (keyCode) {
 516   2              case KEY_UP_K1:
 517   2      
 518   2                      if (g_tDevice.status == E_PowerReady) {
 519   3                              app_power_off();
 520   3                              printf("power off\n");
 521   3                              g_tDevice.status = E_PowerDown;
 522   3                      }
 523   2      
 524   2                      break;
 525   2              case KEY_DOWN_K1:
 526   2                      BEEP_KeyTone();
 527   2                      if (g_tDevice.status == E_PowerOn) {
 528   3                              app_key_power_or_return();
 529   3                      }
 530   2      
 531   2                      break;
 532   2              case KEY_LONG_K1:
 533   2                      BEEP_KeyTone();
 534   2                      if (g_tDevice.status == E_PowerOn) {
 535   3                              g_tDevice.status = E_PowerDown;
 536   3                              app_power_off();
 537   3                      } else if (g_tDevice.status == E_PowerDown) {
 538   3                              g_tDevice.status = E_PowerOn;
 539   3                              app_power_on();
 540   3                      } else if (g_tDevice.status == E_PowerReady) {
 541   3                              g_tDevice.status = E_PowerOn;
 542   3                              app_power_on();
 543   3                      }
 544   2      
 545   2                      break;
 546   2              case KEY_UP_K2:
 547   2      
 548   2                      break;
 549   2              case KEY_DOWN_K2:
C51 COMPILER V9.56.0.0   APP_KEY                                                           08/23/2017 22:34:21 PAGE 10  

 550   2                      BEEP_KeyTone();
 551   2                      app_key_set();
 552   2                      break;
 553   2              case KEY_LONG_K2:
 554   2      
 555   2                      break;
 556   2              case KEY_UP_K3:
 557   2      
 558   2                      break;
 559   2              case KEY_DOWN_K3:
 560   2                      BEEP_KeyTone();
 561   2                      app_key_add();
 562   2                      break;
 563   2              case KEY_LONG_K3:
 564   2      
 565   2                      break;
 566   2              case KEY_UP_K4:
 567   2      
 568   2                      break;
 569   2              case KEY_DOWN_K4:
 570   2                      BEEP_KeyTone();
 571   2                      app_key_ok();
 572   2                      break;
 573   2              case KEY_LONG_K4:
 574   2      
 575   2                      break;
 576   2      #if DEBUG_KEY
                              case KEY_UP_K5:
              
                              break;
                              case KEY_DOWN_K5:
                              //BEEP_KeyTone();
                              query_work_sum();
                              break;
                              case KEY_LONG_K5:
              
                              break;
              #endif
 588   2              case KEY_UP_K1K3:
 589   2      
 590   2                      break;
 591   2              case KEY_DOWN_K1K3:
 592   2      
 593   2                      break;
 594   2              case KEY_LONG_K1K3:
 595   2      
 596   2                      break;
 597   2              default:
 598   2      //              BEEP_KeyTone();
 599   2                      break;
 600   2      
 601   2              }
 602   1      }
 603          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1264    ----
   CONSTANT SIZE    =     23    ----
   XDATA SIZE       =      6       1
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
C51 COMPILER V9.56.0.0   APP_KEY                                                           08/23/2017 22:34:21 PAGE 11  

   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
