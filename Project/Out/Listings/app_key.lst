C51 COMPILER V9.56.0.0   APP_KEY                                                           07/22/2017 22:46:48 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE APP_KEY
OBJECT MODULE PLACED IN .\Out\Objects\app_key.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\App\src\app_key.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Common\inc
                    -;..\App\inc;..\Bsp\inc;..\Startup;..\Bsp) DEFINE(FOSC_110592) DEBUG OBJECTEXTEND PRINT(.\Out\Listings\app_key.lst) OBJEC
                    -T(.\Out\Objects\app_key.obj)

line level    source

   1          /*
   2           * app_key.c
   3           *
   4           *  Created on: 2017年7月7日
   5           *      Author: admin
   6           */
   7          
   8          #include "app.h"
   9          
  10          DEVICE_T g_tDevice;
  11          
  12          static E_TRAINING_MODE mode;
  13          static char letter = '\0';
  14          
  15          #define BLINK_FLASH_TIME   4
  16          
  17          /*
  18           * level: 0, 拉动时候的界面
  19           *        1,
  20           * */
  21          uint8_t level = 0;
  22          
  23          static void app_UI_init(void);
  24          
  25          void app_key_init(void) {
  26   1              level = 0;
  27   1      
  28   1              mode = E_Simple_metering_mode;
  29   1              g_tWork.mode = E_Simple_metering_mode;
  30   1              g_tDevice.status = E_PowerOn;
  31   1              app_UI_init();
  32   1      }
  33          
  34          static void app_UI_init(void) {
  35   1              switch (mode) {
  36   2              case E_Simple_metering_mode:
  37   2      
  38   2                      LCD_Show_Pulls_Num(0);
  39   2                      LCD_Show_CAL_Num(0);
  40   2      
  41   2                      LCD_Show_Line_up();
  42   2                      LCD_Clear_REP_ICO();
  43   2      
  44   2                      LCD_Clear_ABCD();
  45   2      
  46   2                      LCD_Show_CAL_ICO();
  47   2                      LCD_Clear_QS_ICO();
  48   2                      LCD_Clear_COACH_ICO();
  49   2      
  50   2                      break;
  51   2              case E_Quick_start_mode:
  52   2      
  53   2                      LCD_Show_REP_ICO();
C51 COMPILER V9.56.0.0   APP_KEY                                                           07/22/2017 22:46:48 PAGE 2   

  54   2                      LCD_Show_Line_up();
  55   2      
  56   2                      LCD_Show_ABCD('A');
  57   2                      LCD_Show_ABCD('B');
  58   2                      LCD_Show_ABCD('C');
  59   2                      LCD_Show_ABCD('D');
  60   2      
  61   2                      LCD_Show_CAL_ICO();
  62   2      
  63   2                      LCD_Clear_COACH_ICO();
  64   2      
  65   2                      Repeat_Stop();
  66   2                      Repeat_SetStart(LCD_Show_QS_ICO);
  67   2                      Repeat_SetStop(LCD_Clear_QS_ICO);
  68   2                      Repeat_Start(4, 4, 0);
  69   2                      break;
  70   2              case E_Coach_mode:
  71   2                      LCD_Show_REP_ICO();
  72   2                      LCD_Show_Line_up();
  73   2      
  74   2                      LCD_Show_ABCD('A');
  75   2                      LCD_Show_ABCD('B');
  76   2                      LCD_Show_ABCD('C');
  77   2                      LCD_Show_ABCD('D');
  78   2      
  79   2                      LCD_Show_CAL_ICO();
  80   2      
  81   2                      LCD_Clear_QS_ICO();
  82   2      
  83   2                      Repeat_Stop();
  84   2                      Repeat_SetStart(LCD_Show_COACH_ICO);
  85   2                      Repeat_SetStop(LCD_Clear_COACH_ICO);
  86   2                      Repeat_Start(4, 4, 0);
  87   2                      break;
  88   2              }
  89   1      }
  90          
  91          void app_flash_Show(void) {
  92   1      
  93   1              LCD_Show_Line_up();
  94   1              switch (level) {
  95   2              case 0:
  96   2                      break;
  97   2              case 1:
  98   2                      if (mode == E_Quick_start_mode) {
  99   3                              LCD_Show_QS_ICO();
 100   3                      } else if (mode == E_Coach_mode) {
 101   3                              LCD_Show_COACH_ICO();
 102   3                      }
 103   2                      break;
 104   2              case 2:
 105   2      
 106   2                      switch (letter) {
 107   3                      case '\0':
 108   3                              break;
 109   3                      case 'A':
 110   3                              LCD_Show_REP_Num(Rep_Pull_num['A' - 'A'][0]);
 111   3                              LCD_Show_Pulls_Num(Rep_Pull_num['A' - 'A'][1]);
 112   3                              break;
 113   3                      case 'B':
 114   3                              LCD_Show_REP_Num(Rep_Pull_num['B' - 'A'][0]);
 115   3                              LCD_Show_Pulls_Num(Rep_Pull_num['B' - 'A'][1]);
C51 COMPILER V9.56.0.0   APP_KEY                                                           07/22/2017 22:46:48 PAGE 3   

 116   3                              break;
 117   3                      case 'C':
 118   3                              LCD_Show_REP_Num(Rep_Pull_num['C' - 'A'][0]);
 119   3                              LCD_Show_Pulls_Num(Rep_Pull_num['C' - 'A'][1]);
 120   3                              break;
 121   3                      case 'D':
 122   3                              LCD_Show_REP_Num(Rep_Pull_num['D' - 'A'][0]);
 123   3                              LCD_Show_Pulls_Num(Rep_Pull_num['D' - 'A'][1]);
 124   3                              break;
 125   3                      }
 126   2                      if (mode == E_Quick_start_mode) {
 127   3                              LCD_Show_QS_ICO();
 128   3                      } else if (mode == E_Coach_mode) {
 129   3                              LCD_Show_COACH_ICO();
 130   3                      }
 131   2                      LCD_Show_ABCD_all();
 132   2      
 133   2                      break;
 134   2              case 3:
 135   2                      break;
 136   2              }
 137   1              LCD_Show_Line_up();
 138   1      }
 139          void app_flash_Clear(void) {
 140   1      
 141   1              switch (level) {
 142   2              case 0:
 143   2                      break;
 144   2              case 1:
 145   2      //              LCD_Clear_ABCD();
 146   2      //              if (mode == E_Quick_start_mode) {
 147   2      //                      LCD_Clear_QS_ICO();
 148   2      //              } else if (mode == E_Coach_mode) {
 149   2      //                      LCD_Clear_COACH_ICO();
 150   2      //              }
 151   2      
 152   2                      LCD_Clear_QS_ICO();
 153   2                      LCD_Clear_COACH_ICO();
 154   2                      break;
 155   2              case 2:
 156   2      
 157   2                      if (letter == '\0') {
 158   3                              LCD_Clear_ABCD();
 159   3                      }
 160   2                      if (letter == 'A') {
 161   3                              LCD_Clear_ABCD();
 162   3                              LCD_Show_ABCD('A');
 163   3                      }
 164   2                      if (letter == 'B') {
 165   3                              LCD_Clear_ABCD();
 166   3                              LCD_Show_ABCD('B');
 167   3                      }
 168   2                      if (letter == 'C') {
 169   3                              LCD_Clear_ABCD();
 170   3                              LCD_Show_ABCD('C');
 171   3                      }
 172   2                      if (letter == 'D') {
 173   3                              LCD_Clear_ABCD();
 174   3                              LCD_Show_ABCD('D');
 175   3                      }
 176   2                      if (mode == E_Quick_start_mode) {
 177   3                              LCD_Clear_QS_ICO();
C51 COMPILER V9.56.0.0   APP_KEY                                                           07/22/2017 22:46:48 PAGE 4   

 178   3                      } else if (mode == E_Coach_mode) {
 179   3                              LCD_Clear_COACH_ICO();
 180   3                      }
 181   2                      break;
 182   2              case 3:
 183   2                      break;
 184   2              }
 185   1      
 186   1      }
 187          void app_key_power_or_return(void) {
 188   1      
 189   1              switch (level) {
 190   2              case 0:
 191   2                      switch (mode) {
 192   3                      case E_Simple_metering_mode:
 193   3                              g_tWork.sum = 0;
 194   3                              g_tWork.cal_num = 0;
 195   3      
 196   3                              LCD_Show_Pulls_Num(g_tWork.sum);
 197   3                              LCD_Show_CAL_Num(g_tWork.cal_num);
 198   3      
 199   3                              LCD_Show_Line_up();
 200   3                              LCD_Clear_REP_ICO();
 201   3      
 202   3                              LCD_Clear_ABCD();
 203   3      
 204   3                              LCD_Show_CAL_ICO();
 205   3                              LCD_Clear_QS_ICO();
 206   3                              LCD_Clear_COACH_ICO();
 207   3      
 208   3                              break;
 209   3                      case E_Quick_start_mode:
 210   3                              g_tWork.sum = 0;
 211   3                              g_tWork.cal_num = 0;
 212   3      
 213   3                              LCD_Show_REP_Num(0);
 214   3                              LCD_Show_Pulls_Num(0);
 215   3                              LCD_Show_CAL_Num(0);
 216   3      
 217   3                              LCD_Show_Line_up();
 218   3                              LCD_Show_REP_ICO();
 219   3      
 220   3                              LCD_Show_ABCD(g_tWork.reps_mode);
 221   3      
 222   3                              LCD_Show_CAL_ICO();
 223   3                              LCD_Show_QS_ICO();
 224   3                              LCD_Clear_COACH_ICO();
 225   3                              break;
 226   3                      case E_Coach_mode:
 227   3                              g_tWork.sum = 0;
 228   3                              g_tWork.cal_num = 0;
 229   3      
 230   3                              LCD_Show_REP_Num(0);
 231   3                              LCD_Show_Pulls_Num(0);
 232   3                              LCD_Show_CAL_Num(0);
 233   3      
 234   3                              LCD_Show_Line_up();
 235   3                              LCD_Show_REP_ICO();
 236   3      
 237   3                              LCD_Show_ABCD(g_tWork.reps_mode);
 238   3      
 239   3                              LCD_Show_CAL_ICO();
C51 COMPILER V9.56.0.0   APP_KEY                                                           07/22/2017 22:46:48 PAGE 5   

 240   3                              LCD_Clear_QS_ICO();
 241   3                              LCD_Show_COACH_ICO();
 242   3      
 243   3                              break;
 244   3                      }
 245   2                      break;
 246   2              case 1:
 247   2                      Repeat_Stop();
 248   2                      if (level) {
 249   3                              level--;
 250   3                      }
 251   2      
 252   2                      break;
 253   2              case 2:
 254   2                      if (level) {
 255   3                              level--;
 256   3                      }
 257   2                      break;
 258   2              case 3:
 259   2                      if (level) {
 260   3                              level--;
 261   3                      }
 262   2                      break;
 263   2              }
 264   1      
 265   1      }
 266          void app_key_set(void) {
 267   1      //      static BIT power_on_mode_flag = 0;
 268   1      
 269   1              switch (level) {
 270   2              case 0:
 271   2      
 272   2                      switch (g_tWork.mode) {
 273   3                      case E_Simple_metering_mode:
 274   3                              //g_tWork.mode = E_Quick_start_mode;
 275   3                              //mode = E_Quick_start_mode;
 276   3                              level = 1;
 277   3                              break;
 278   3                      case E_Quick_start_mode:
 279   3      
 280   3                              break;
 281   3                      case E_Coach_mode:
 282   3      
 283   3                              break;
 284   3                      }
 285   2      
 286   2                      LCD_Show_REP_Num(0);
 287   2                      LCD_Show_Pulls_Num(0);
 288   2                      LCD_Show_CAL_Num(0);
 289   2      
 290   2                      LCD_Show_Line_up();
 291   2                      LCD_Show_REP_ICO();
 292   2      
 293   2                      LCD_Show_ABCD_all();
 294   2      
 295   2                      LCD_Show_CAL_ICO();
 296   2      
 297   2                      mode = g_tWork.mode;
 298   2                      mode = E_Quick_start_mode;
 299   2                      level = 1;
 300   2                      Repeat_Stop();
 301   2                      Repeat_SetStart(app_flash_Show);
C51 COMPILER V9.56.0.0   APP_KEY                                                           07/22/2017 22:46:48 PAGE 6   

 302   2                      Repeat_SetStop(app_flash_Clear);
 303   2                      Repeat_Start(BLINK_FLASH_TIME, BLINK_FLASH_TIME, 0);
 304   2                      break;
 305   2              case 1:
 306   2      //              level = 2;
 307   2      
 308   2                      break;
 309   2              case 2:
 310   2                      break;
 311   2              case 3:
 312   2                      break;
 313   2              }
 314   1      
 315   1      //      app_UI_init();
 316   1      }
 317          
 318          void app_key_add(void) {
 319   1      
 320   1              switch (level) {
 321   2              case 0:
 322   2      
 323   2                      break;
 324   2              case 1:
 325   2                      switch (mode) {
 326   3                      case E_Simple_metering_mode:
 327   3                              mode = E_Quick_start_mode;
 328   3      
 329   3                              break;
 330   3                      case E_Quick_start_mode:
 331   3                              mode = E_Coach_mode;
 332   3      
 333   3                              break;
 334   3                      case E_Coach_mode:
 335   3      
 336   3                              mode = E_Simple_metering_mode;
 337   3      
 338   3                              break;
 339   3                      }
 340   2                      break;
 341   2              case 2:
 342   2                      switch (mode) {
 343   3                      case E_Simple_metering_mode:
 344   3      
 345   3                              break;
 346   3                      case E_Quick_start_mode:
 347   3      
 348   3                              if (letter == '\0') {
 349   4                                      letter = 'A';
 350   4                              } else {
 351   4                                      letter++;
 352   4                                      if (letter > 'D') {
 353   5                                              letter = 'A';
 354   5                                      }
 355   4                              }
 356   3      
 357   3                              break;
 358   3                      case E_Coach_mode:
 359   3                              if (letter == '\0') {
 360   4                                      letter = 'A';
 361   4                              } else {
 362   4                                      letter++;
 363   4                                      if (letter > 'D') {
C51 COMPILER V9.56.0.0   APP_KEY                                                           07/22/2017 22:46:48 PAGE 7   

 364   5                                              letter = 'A';
 365   5                                      }
 366   4                              }
 367   3                              break;
 368   3                      }
 369   2                      break;
 370   2              case 3:
 371   2                      break;
 372   2              }
 373   1      
 374   1      }
 375          void app_key_ok(void) {
 376   1              //g_tWork.mode = mode;
 377   1      
 378   1              switch (level) {
 379   2              case 0:
 380   2      
 381   2                      break;
 382   2              case 1:
 383   2      
 384   2                      switch (mode) {
 385   3                      case E_Simple_metering_mode:
 386   3      
 387   3                              break;
 388   3                      case E_Quick_start_mode:
 389   3      
 390   3                              LCD_Show_QS_ICO();
 391   3                              LCD_Clear_COACH_ICO();
 392   3      
 393   3                              break;
 394   3                      case E_Coach_mode:
 395   3                              LCD_Clear_QS_ICO();
 396   3                              LCD_Show_COACH_ICO();
 397   3      
 398   3                              break;
 399   3                      }
 400   2                      letter = 'A';
 401   2                      level = 2;
 402   2                      break;
 403   2              case 2:
 404   2                      switch (mode) {
 405   3                      case E_Simple_metering_mode:
 406   3      
 407   3                              break;
 408   3                      case E_Quick_start_mode:
 409   3      
 410   3                              Repeat_Stop();
 411   3                              LCD_Show_QS_ICO();
 412   3                              LCD_Clear_COACH_ICO();
 413   3      
 414   3                              break;
 415   3                      case E_Coach_mode:
 416   3      
 417   3                              break;
 418   3                      }
 419   2                      g_tWork.mode = mode;
 420   2                      g_tWork.reps_mode = letter;
 421   2                      g_tWork.sum = 0;
 422   2                      level = 0;
 423   2                      break;
 424   2              case 3:
 425   2                      break;
C51 COMPILER V9.56.0.0   APP_KEY                                                           07/22/2017 22:46:48 PAGE 8   

 426   2              }
 427   1      
 428   1      //      level++;
 429   1      //      if (level >= 3) {
 430   1      //              level = 0;
 431   1      //      }
 432   1      }
 433          
 434          void app_power_on(void) {
 435   1              SW_Reset();  //复位
 436   1      }
 437          void app_power_off(void) {
 438   1              lcd_bright_off();
 439   1              LCD_Clear_All();
 440   1      }
 441          void app_key_pro(uint8_t keyCode) {
 442   1      
 443   1              switch (keyCode) {
 444   2              case KEY_UP_K1:
 445   2      
 446   2                      break;
 447   2              case KEY_DOWN_K1:
 448   2                      BEEP_KeyTone();
 449   2                      app_key_power_or_return();
 450   2                      break;
 451   2              case KEY_LONG_K1:
 452   2                      BEEP_KeyTone();
 453   2                      if (g_tDevice.status == E_PowerOn) {
 454   3                              g_tDevice.status = E_PowerOff;
 455   3                              app_power_off();
 456   3                      } else if (g_tDevice.status == E_PowerOff) {
 457   3                              g_tDevice.status = E_PowerOn;
 458   3                              app_power_on();
 459   3                      }
 460   2      
 461   2                      break;
 462   2              case KEY_UP_K2:
 463   2      
 464   2                      break;
 465   2              case KEY_DOWN_K2:
 466   2                      BEEP_KeyTone();
 467   2                      app_key_set();
 468   2                      break;
 469   2              case KEY_LONG_K2:
 470   2      
 471   2                      break;
 472   2              case KEY_UP_K3:
 473   2      
 474   2                      break;
 475   2              case KEY_DOWN_K3:
 476   2                      BEEP_KeyTone();
 477   2                      app_key_add();
 478   2                      break;
 479   2              case KEY_LONG_K3:
 480   2      
 481   2                      break;
 482   2              case KEY_UP_K4:
 483   2      
 484   2                      break;
 485   2              case KEY_DOWN_K4:
 486   2                      BEEP_KeyTone();
 487   2                      app_key_ok();
C51 COMPILER V9.56.0.0   APP_KEY                                                           07/22/2017 22:46:48 PAGE 9   

 488   2                      break;
 489   2              case KEY_LONG_K4:
 490   2      
 491   2                      break;
 492   2      #if DEBUG_KEY
 493   2              case KEY_UP_K5:
 494   2      
 495   2                      break;
 496   2              case KEY_DOWN_K5:
 497   2                      //BEEP_KeyTone();
 498   2                      query_work_sum();
 499   2                      break;
 500   2              case KEY_LONG_K5:
 501   2      
 502   2                      break;
 503   2      #endif
 504   2              case KEY_UP_K1K3:
 505   2      
 506   2                      break;
 507   2              case KEY_DOWN_K1K3:
 508   2      
 509   2                      break;
 510   2              case KEY_LONG_K1K3:
 511   2      
 512   2                      break;
 513   2              default:
 514   2      //              BEEP_KeyTone();
 515   2                      break;
 516   2      
 517   2              }
 518   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1055    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      4    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
