C51 COMPILER V9.52.0.0   BSP_BEEP                                                          09/09/2018 09:18:08 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE BSP_BEEP
OBJECT MODULE PLACED IN .\Out\Objects\bsp_beep.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\Bsp\src\bsp_beep.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Common\in
                    -c;..\App\inc;..\Bsp\inc;..\Startup;..\Bsp) DEFINE(FOSC_110592) DEBUG OBJECTEXTEND PRINT(.\Out\Listings\bsp_beep.lst) OBJ
                    -ECT(.\Out\Objects\bsp_beep.obj)

line level    source

   1          #include "bsp.h"
   2          #include <string.h>
   3          
   4          static idata BEEP_T g_tBeep; /* 定义蜂鸣器全局结构体变量 */
   5          //static BEEP_T g_tBeep; /* 定义蜂鸣器全局结构体变量 */
   6          //static BIT delay_flag = 0;
   7          /*
   8           *********************************************************************************************************
   9           *      函 数 名: BEEP_InitHard
  10           *      功能说明: 初始化蜂鸣器硬件
  11           *      形    参：无
  12           *      返 回 值: 无
  13           *********************************************************************************************************
  14           */
  15          void BEEP_InitHard(void) {
  16   1      #if 1
  17   1              P3M1 &= ~SET_BIT0;
  18   1              P3M2 |= SET_BIT0;
  19   1      
  20   1              clr_P30;
  21   1      #endif
  22   1      
  23   1              /*  PWM period = (R2AH + R2AL) * Pre-scale / Fsys, Fsys = 11.0592MHz (HIRC)
  24   1               If R2AH = R2AL, PWM output 50% duty cycle
  25   1               Min frequency is about 20Hz, while Pre-scale = 1/1024 and R2AH = R2AL = 255
  26   1               Max frequency is around 5.5MHz, while Pre-scale = 1/1 and R2AH = R2AL = 1   */
  27   1      
  28   1              /* Determine Timer 2D pre-scalar */
  29   1              clr_T2DPS2;
  30   1              set_T2DPS1;
  31   1              set_T2DPS0;
  32   1      
  33   1              /* Determine Timer 2D Reload Low Byte */
  34   1              R2DL = 128;
  35   1              /* Determine Timer 2D Reload High Byte */
  36   1              R2DH = 128;
  37   1      
  38   1              /* Set T2D as PWM mode */
  39   1              set_T2DM;
  40   1      
  41   1              /* Enable Timer2D interrupt */
  42   1      //      set_ET2D;
  43   1      //      set_EA;
  44   1              /* set T2AO1(P1.5)/T2AO2(P1.6) pin to toggling output */
  45   1      //      set_T2DOE1;
  46   1      //      set_T2DOE2;
  47   1              /* start Timer2D */
  48   1              set_TR2D;
  49   1      
  50   1              g_tBeep.ucEnalbe = 0;
  51   1      
  52   1      }
  53          
C51 COMPILER V9.52.0.0   BSP_BEEP                                                          09/09/2018 09:18:08 PAGE 2   

  54          void BEEP_ENABLE() {
  55   1              set_T2DOE1;
  56   1              set_P30;
  57   1      }
  58          
  59          void BEEP_DISABLE() {
  60   1              clr_T2DOE1;
  61   1      
  62   1              clr_P30;
  63   1      
  64   1      }
  65          /*
  66           *********************************************************************************************************
  67           *      函 数 名: BEEP_Start
  68           *      功能说明: 启动蜂鸣音。
  69           *      形    参：  _usInitTime : 延时时间，单位10ms; beep响之前延时的时间; 0表示不延时
  70           *                _usBeepTime : 蜂鸣时间，单位10ms; 0 表示不鸣叫
  71           *                _usStopTime : 停止时间，单位10ms; 0 表示持续鸣叫
  72           *                _usCycle : 鸣叫次数， 0 表示持续鸣叫
  73           *      返 回 值: 无
  74           *********************************************************************************************************
  75           */
  76          void BEEP_Start(uint16_t _usDelayTime, uint16_t _usBeepTime,
  77                          uint16_t _usStopTime, uint16_t _usCycle) {
  78   1              if (_usBeepTime == 0) {
  79   2                      return;
  80   2              }
  81   1              g_tBeep.usDelayTime = _usDelayTime;
  82   1              g_tBeep.usBeepTime = _usBeepTime;
  83   1              g_tBeep.usStopTime = _usStopTime;
  84   1              g_tBeep.usCycle = _usCycle;
  85   1              g_tBeep.usCount = 0;
  86   1              g_tBeep.usCycleCount = 0;
  87   1              g_tBeep.ucState = 0;
  88   1              g_tBeep.ucEnalbe = 1; /* 设置完全局参数后再使能发声标志 */
  89   1      
  90   1              g_tBeep.delay_flag = 1;
  91   1      
  92   1      //      BEEP_ENABLE(); /* 开始发声 */
  93   1      }
  94          BEEP_T* BEEP_Start_get(void) {
  95   1              return &g_tBeep;
  96   1      }
  97          void BEEP_Start_struct(BEEP_T *beep_pt) {
  98   1              memcpy((uint8_t*) &g_tBeep, (uint8_t*) beep_pt, sizeof(BEEP_T));
  99   1      }
 100          /*
 101           *********************************************************************************************************
 102           *      函 数 名: BEEP_Stop
 103           *      功能说明: 停止蜂鸣音。
 104           *      形    参：无
 105           *      返 回 值: 无
 106           *********************************************************************************************************
 107           */
 108          void BEEP_Stop(void) {
 109   1              g_tBeep.ucEnalbe = 0;
 110   1      
 111   1              BEEP_DISABLE(); /* 必须在清控制标志后再停止发声，避免停止后在中断中又开启 */
 112   1      }
 113          
 114          /*
 115           *********************************************************************************************************
C51 COMPILER V9.52.0.0   BSP_BEEP                                                          09/09/2018 09:18:08 PAGE 3   

 116           *      函 数 名: BEEP_KeyTone
 117           *      功能说明: 发送按键音
 118           *      形    参：无
 119           *      返 回 值: 无
 120           *********************************************************************************************************
 121           */
 122          void BEEP_KeyTone(void) {
 123   1      //      BEEP_Start(0, 5, 1, 1); /* 鸣叫50ms，停10ms， 1次 */
 124   1      }
 125          
 126          /*
 127           *********************************************************************************************************
 128           *      函 数 名: BEEP_Pro
 129           *      功能说明: 每隔10ms调用1次该函数，用于控制蜂鸣器发声。该函数在 bsp_timer.c 中被调用。
 130           *      形    参：无
 131           *      返 回 值: 无
 132           *********************************************************************************************************
 133           */
 134          void BEEP_Pro(void) {
 135   1              if ((g_tBeep.ucEnalbe == 0) || (g_tBeep.usStopTime == 0)) {
 136   2                      return;
 137   2              }
 138   1              if (g_tBeep.usDelayTime) {
 139   2                      g_tBeep.usDelayTime--;
 140   2                      return;
 141   2              }
 142   1              if (g_tBeep.delay_flag) {
 143   2                      g_tBeep.delay_flag = 0;
 144   2                      BEEP_ENABLE();
 145   2              }
 146   1      
 147   1              if (g_tBeep.ucState == 0) {
 148   2                      if (g_tBeep.usStopTime > 0) /* 间断发声 */
 149   2                      {
 150   3                              if (++g_tBeep.usCount >= g_tBeep.usBeepTime) {
 151   4                                      BEEP_DISABLE(); /* 停止发声 */
 152   4                                      g_tBeep.usCount = 0;
 153   4                                      g_tBeep.ucState = 1;
 154   4                              }
 155   3                      } else {
 156   3                              ; /* 不做任何处理，连续发声 */
 157   3                      }
 158   2              } else if (g_tBeep.ucState == 1) {
 159   2                      if (++g_tBeep.usCount >= g_tBeep.usStopTime) {
 160   3                              /* 连续发声时，直到调用stop停止为止 */
 161   3                              if (g_tBeep.usCycle > 0) {
 162   4                                      if (++g_tBeep.usCycleCount >= g_tBeep.usCycle) {
 163   5                                              /* 循环次数到，停止发声 */
 164   5                                              g_tBeep.ucEnalbe = 0;
 165   5                                      }
 166   4                                      if (g_tBeep.ucEnalbe == 0) {
 167   5                                              g_tBeep.usStopTime = 0;
 168   5                                              return;
 169   5                                      }
 170   4                              }
 171   3      
 172   3                              g_tBeep.usCount = 0;
 173   3                              g_tBeep.ucState = 0;
 174   3      
 175   3                              BEEP_ENABLE(); /* 开始发声 */
 176   3                      }
 177   2              }
C51 COMPILER V9.52.0.0   BSP_BEEP                                                          09/09/2018 09:18:08 PAGE 4   

 178   1      }
 179          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    318    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       8
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =     15    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
