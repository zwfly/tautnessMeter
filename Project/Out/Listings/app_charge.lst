C51 COMPILER V9.56.0.0   APP_CHARGE                                                        08/22/2017 22:57:44 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE APP_CHARGE
OBJECT MODULE PLACED IN .\Out\Objects\app_charge.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\App\src\app_charge.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Common\
                    -inc;..\App\inc;..\Bsp\inc;..\Startup;..\Bsp) DEFINE(FOSC_110592) DEBUG OBJECTEXTEND PRINT(.\Out\Listings\app_charge.lst)
                    - OBJECT(.\Out\Objects\app_charge.obj)

line level    source

   1          /*
   2           * app_charge.c
   3           *
   4           *  Created on: 2017Äê7ÔÂ12ÈÕ
   5           *      Author: fly
   6           */
   7          
   8          #include "app.h"
   9          
  10          static idata CHARGE_T g_tCharge;
  11          //static CHARGE_T g_tCharge;
  12          
  13          void app_charge_Init(void) {
  14   1      
  15   1              g_tCharge.count = 0;
  16   1      
  17   1              set_P0M1_7;
  18   1              clr_P0M2_7;
  19   1      
  20   1      }
  21          
  22          void app_charge_100ms_pro(void) {
  23   1              static BIT flag = 0;
  24   1      
  25   1              if (g_tDevice.status == E_PowerDown) {
  26   2                      LCD_Clear_Battery_ICO();
  27   2                      return;
  28   2              }
  29   1      
  30   1              g_tCharge.count++;
  31   1              switch (g_tCharge.status) {
  32   2              case E_NeedCharge:
  33   2                      if (g_tCharge.count >= 5) {
  34   3                              g_tCharge.count = 0;
  35   3      
  36   3                              if (flag) {
  37   4                                      flag = 0;
  38   4                                      LCD_Show_Battery_ICO();
  39   4                              } else {
  40   4                                      flag = 1;
  41   4                                      LCD_Clear_Battery_ICO();
  42   4                              }
  43   3                      }
  44   2                      break;
  45   2              case E_InCharge:
  46   2                      if (g_tCharge.count >= 10) {
  47   3                              g_tCharge.count = 0;
  48   3      
  49   3                              if (flag) {
  50   4                                      flag = 0;
  51   4                                      LCD_Show_Battery_ICO();
  52   4                              } else {
  53   4                                      flag = 1;
C51 COMPILER V9.56.0.0   APP_CHARGE                                                        08/22/2017 22:57:44 PAGE 2   

  54   4                                      LCD_Clear_Battery_ICO();
  55   4                              }
  56   3                      }
  57   2                      break;
  58   2              case E_FullCharge:
  59   2                      if (g_tCharge.count >= 9) {
  60   3                              g_tCharge.count = 0;
  61   3      
  62   3                              LCD_Show_Battery_ICO();
  63   3                      }
  64   2                      break;
  65   2              case E_Discharge:
  66   2                      if (g_tCharge.count >= 9) {
  67   3                              g_tCharge.count = 0;
  68   3      
  69   3                              LCD_Clear_Battery_ICO();
  70   3                      }
  71   2                      break;
  72   2              }
  73   1      
  74   1      }
  75          
  76          static BIT result_flag = 0;
  77          
  78          void app_battery_voltage_result(void) {
  79   1              BIT cmp = 0;
  80   1      
  81   1              set_P01;
  82   1      
  83   1              g_tCharge.result = ADCRH;
  84   1              g_tCharge.result <<= 2;
  85   1              g_tCharge.result |= ADCRL;
  86   1      
  87   1              ((ADCCON2 & SET_BIT4) == 0) ? (cmp = 1) : (cmp = 0);
  88   1      
  89   1              result_flag = 1;
  90   1      
  91   1      //      printf("battery voltage ADC value = %d, cmp = %d\n", result, cmp);
  92   1      
  93   1      }
  94          
  95          void app_charge_1s_pro(void) {
  96   1      
  97   1              if (P07) {  //insert usb
  98   2                      if (P50) {
  99   3                              g_tCharge.status = E_FullCharge;
 100   3                      } else {
 101   3                              g_tCharge.status = E_InCharge;
 102   3                      }
 103   2              } else {
 104   2                      if (result_flag) {
 105   3                              result_flag = 0;
 106   3      
 107   3                              if (g_tCharge.result < 490) {
 108   4                                      g_tCharge.status = E_NeedCharge;
 109   4                              } else {
 110   4                                      g_tCharge.status = E_Discharge;
 111   4                              }
 112   3      
 113   3                              printf("adc = %u\n", g_tCharge.result);
 114   3                      }
 115   2      
C51 COMPILER V9.56.0.0   APP_CHARGE                                                        08/22/2017 22:57:44 PAGE 3   

 116   2              }
 117   1      
 118   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    227    ----
   CONSTANT SIZE    =     10    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =      4    ----
   BIT SIZE         =      2       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
