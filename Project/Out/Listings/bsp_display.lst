C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       07/14/2017 22:01:00 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE BSP_DISPLAY
OBJECT MODULE PLACED IN .\Out\Objects\bsp_display.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\Bsp\src\bsp_display.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Common
                    -\inc;..\App\inc;..\Bsp\inc;..\Startup;..\Bsp) DEFINE(FOSC_110592) DEBUG OBJECTEXTEND PRINT(.\Out\Listings\bsp_display.ls
                    -t) OBJECT(.\Out\Objects\bsp_display.obj)

line level    source

   1          /*
   2           * bsp_display.c
   3           *
   4           *  Created on: 2017Äê6ÔÂ26ÈÕ
   5           *      Author: fly
   6           */
   7          
   8          #include "bsp.h"
   9          
  10          #define COM0    0x01
  11          #define COM1    0x02
  12          #define COM2    0x04
  13          #define COM3    0x08
  14          
  15          void LCD_display_InitHard(void) {
  16   1      
  17   1      #if 1
  18   1      
  19   1              P1M2 = 0x00;
  20   1              P1M1 = 0xFF;
  21   1      
  22   1              P2M2 = 0x00;
  23   1              P2M1 = 0xFF;
  24   1      
  25   1              P4M2 = 0x00;
  26   1              P4M1 = 0xFF;
  27   1      #endif
  28   1      
  29   1              LCDCON = 0x40;      //;VLCD = 0.9VDD (VDD = 3.3V, VLCD = 3.0V)
  30   1                                                      //;1/4 duty, 1/3 bias, 150kO resistor ladder
  31   1      
  32   1              LCDCLK = 0x04;      //
  33   1      
  34   1              //enable seg pin
  35   1              LCDSEG0 = 0xFF;
  36   1              LCDSEG1 = 0xFF;
  37   1              LCDSEG2 = 0x07;
  38   1      
  39   1              LCDCON |= SET_BIT7;  //LCDEN = 1
  40   1      
  41   1              LCD_Clear_All();
  42   1      }
  43          
  44          void LCD_Clear_All(void) {
  45   1              uint8_t i;
  46   1              for (i = 0; i < 19; i++) {
  47   2                      LCDPTR = i;
  48   2                      LCDDAT = 0;
  49   2              }
  50   1      }
  51          
  52          void LCD_Clear_Bluetooth_ICO(void) {
  53   1              clr_SEG10EN;
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       07/14/2017 22:01:00 PAGE 2   

  54   1              LCDPTR = 10;
  55   1              LCDDAT = COM0;
  56   1      }
  57          void LCD_Show_Bluetooth_ICO(void) {
  58   1              set_SEG10EN;
  59   1              LCDPTR = 10;
  60   1              LCDDAT = COM0;
  61   1      }
  62          
  63          void LCD_Clear_Bluetooth_Fill_ICO(void) {
  64   1              clr_SEG12EN;
  65   1              LCDPTR = 12;
  66   1              LCDDAT = COM0;
  67   1      }
  68          void LCD_Show_Bluetooth_Fill_ICO(void) {
  69   1              set_SEG12EN;
  70   1              LCDPTR = 12;
  71   1              LCDDAT = COM0;
  72   1      }
  73          
  74          void LCD_Clear_Line_up(void) {
  75   1              clr_SEG8EN;
  76   1              LCDPTR = 8;
  77   1              LCDDAT = COM0;
  78   1      }
  79          void LCD_Show_Line_up(void) {
  80   1              set_SEG8EN;
  81   1              LCDPTR = 8;
  82   1              LCDDAT = COM0;
  83   1      }
  84          void LCD_Clear_Battery_ICO(void) {
  85   1              clr_SEG14EN;
  86   1              LCDPTR = 14;
  87   1              LCDDAT = COM0;
  88   1      }
  89          void LCD_Show_Battery_ICO(void) {
  90   1              set_SEG14EN;
  91   1              LCDPTR = 14;
  92   1              LCDDAT = COM0;
  93   1      }
  94          void LCD_Clear_REP_ICO(void) {
  95   1              clr_SEG16EN;
  96   1              LCDPTR = 16;
  97   1              LCDDAT = COM0;
  98   1      }
  99          void LCD_Show_REP_ICO(void) {
 100   1              set_SEG16EN;
 101   1              LCDPTR = 16;
 102   1              LCDDAT = COM0;
 103   1      }
 104          void LCD_Clear_REP_Num(void) {
 105   1              clr_SEG18EN;
 106   1              clr_SEG19EN;
 107   1              clr_SEG20EN;
 108   1              clr_SEG21EN;
 109   1      
 110   1              LCDPTR = 18;
 111   1              LCDDAT = COM1 + COM2 + COM3;
 112   1      
 113   1              LCDPTR = 19;
 114   1              LCDDAT = COM0 + COM1 + COM2 + COM3;
 115   1      
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       07/14/2017 22:01:00 PAGE 3   

 116   1              LCDPTR = 20;
 117   1              LCDDAT = COM1 + COM2 + COM3;
 118   1      
 119   1              LCDPTR = 21;
 120   1              LCDDAT = COM0 + COM1 + COM2 + COM3;
 121   1      }
 122          void LCD_Show_REP_Num(uint8_t num) {
 123   1      
 124   1              uint8_t ge;
 125   1              uint8_t shi;
 126   1      
 127   1              if (num > 99) {
 128   2      
 129   2                      return;
 130   2              }
 131   1      
 132   1              shi = num / 10;
 133   1              ge = num % 10;
 134   1              if (num > 9) {
 135   2                      set_SEG14EN;
 136   2                      set_SEG15EN;
 137   2                      switch (shi) {
 138   3                      case 0:
 139   3                              LCDPTR = 14;
 140   3                              LCDDAT = COM1 + COM3;
 141   3      
 142   3                              LCDPTR = 15;
 143   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
 144   3                              break;
 145   3                      case 1:
 146   3                              LCDPTR = 14;
 147   3                              LCDDAT = 0;
 148   3      
 149   3                              LCDPTR = 15;
 150   3                              LCDDAT = COM1 + COM2;
 151   3                              break;
 152   3                      case 2:
 153   3                              LCDPTR = 14;
 154   3                              LCDDAT = COM2 + COM3;
 155   3      
 156   3                              LCDPTR = 15;
 157   3                              LCDDAT = COM0 + COM1 + COM3;
 158   3                              break;
 159   3                      case 3:
 160   3                              LCDPTR = 14;
 161   3                              LCDDAT = COM2;
 162   3      
 163   3                              LCDPTR = 15;
 164   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
 165   3                              break;
 166   3                      case 4:
 167   3                              LCDPTR = 14;
 168   3                              LCDDAT = COM1 + COM2;
 169   3      
 170   3                              LCDPTR = 15;
 171   3                              LCDDAT = COM1 + COM2;
 172   3                              break;
 173   3                      case 5:
 174   3                              LCDPTR = 14;
 175   3                              LCDDAT = COM1 + COM2;
 176   3      
 177   3                              LCDPTR = 15;
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       07/14/2017 22:01:00 PAGE 4   

 178   3                              LCDDAT = COM0 + COM2 + COM3;
 179   3                              break;
 180   3                      case 6:
 181   3                              LCDPTR = 14;
 182   3                              LCDDAT = COM1 + COM2 + COM3;
 183   3      
 184   3                              LCDPTR = 15;
 185   3                              LCDDAT = COM0 + COM2 + COM3;
 186   3                              break;
 187   3                      case 7:
 188   3                              LCDPTR = 14;
 189   3                              LCDDAT = 0;
 190   3      
 191   3                              LCDPTR = 15;
 192   3                              LCDDAT = COM0 + COM1 + COM2;
 193   3                              break;
 194   3                      case 8:
 195   3                              LCDPTR = 14;
 196   3                              LCDDAT = COM1 + COM2 + COM3;
 197   3      
 198   3                              LCDPTR = 15;
 199   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
 200   3                              break;
 201   3                      case 9:
 202   3                              LCDPTR = 14;
 203   3                              LCDDAT = COM1 + COM2;
 204   3      
 205   3                              LCDPTR = 15;
 206   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
 207   3                              break;
 208   3                      }
 209   2              } else {
 210   2                      clr_SEG14EN;
 211   2                      clr_SEG15EN;
 212   2      
 213   2                      LCDPTR = 14;
 214   2                      LCDDAT = COM0 + COM1 + COM2 + COM3;
 215   2      
 216   2                      LCDPTR = 15;
 217   2                      LCDDAT = COM0 + COM1 + COM2 + COM3;
 218   2              }
 219   1              set_SEG16EN;
 220   1              set_SEG17EN;
 221   1              switch (ge) {
 222   2              case 0:
 223   2                      LCDPTR = 16;
 224   2                      LCDDAT = COM1 + COM3;
 225   2      
 226   2                      LCDPTR = 17;
 227   2                      LCDDAT = COM0 + COM1 + COM2 + COM3;
 228   2                      break;
 229   2              case 1:
 230   2                      LCDPTR = 16;
 231   2                      LCDDAT = 0;
 232   2      
 233   2                      LCDPTR = 17;
 234   2                      LCDDAT = COM1 + COM2;
 235   2                      break;
 236   2              case 2:
 237   2                      LCDPTR = 16;
 238   2                      LCDDAT = COM2 + COM3;
 239   2      
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       07/14/2017 22:01:00 PAGE 5   

 240   2                      LCDPTR = 17;
 241   2                      LCDDAT = COM0 + COM1 + COM3;
 242   2                      break;
 243   2              case 3:
 244   2                      LCDPTR = 16;
 245   2                      LCDDAT = COM2;
 246   2      
 247   2                      LCDPTR = 17;
 248   2                      LCDDAT = COM0 + COM1 + COM2 + COM3;
 249   2                      break;
 250   2              case 4:
 251   2                      LCDPTR = 16;
 252   2                      LCDDAT = COM1 + COM2;
 253   2      
 254   2                      LCDPTR = 17;
 255   2                      LCDDAT = COM1 + COM2;
 256   2                      break;
 257   2              case 5:
 258   2                      LCDPTR = 16;
 259   2                      LCDDAT = COM1 + COM2;
 260   2      
 261   2                      LCDPTR = 17;
 262   2                      LCDDAT = COM0 + COM2 + COM3;
 263   2                      break;
 264   2              case 6:
 265   2                      LCDPTR = 16;
 266   2                      LCDDAT = COM1 + COM2 + COM3;
 267   2      
 268   2                      LCDPTR = 17;
 269   2                      LCDDAT = COM0 + COM2 + COM3;
 270   2                      break;
 271   2              case 7:
 272   2                      LCDPTR = 16;
 273   2                      LCDDAT = 0;
 274   2      
 275   2                      LCDPTR = 17;
 276   2                      LCDDAT = COM0 + COM1 + COM2;
 277   2                      break;
 278   2              case 8:
 279   2                      LCDPTR = 16;
 280   2                      LCDDAT = COM1 + COM2 + COM3;
 281   2      
 282   2                      LCDPTR = 17;
 283   2                      LCDDAT = COM0 + COM1 + COM2 + COM3;
 284   2                      break;
 285   2              case 9:
 286   2                      LCDPTR = 16;
 287   2                      LCDDAT = COM1 + COM2;
 288   2      
 289   2                      LCDPTR = 17;
 290   2                      LCDDAT = COM0 + COM1 + COM2 + COM3;
 291   2                      break;
 292   2              }
 293   1      }
 294          void LCD_Clear_ABCD(void) {
 295   1              clr_SEG18EN;
 296   1              LCDPTR = 18;
 297   1              LCDDAT = COM0 + COM1 + COM2 + COM3;
 298   1      }
 299          void LCD_Show_ABCD_all(void) {
 300   1              set_SEG18EN;
 301   1              LCDPTR = 18;
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       07/14/2017 22:01:00 PAGE 6   

 302   1              LCDDAT = COM0 + COM1 + COM2 + COM3;
 303   1      }
 304          void LCD_Show_ABCD(char c) {
 305   1              set_SEG18EN;
 306   1              LCDPTR = 18;
 307   1      
 308   1              switch (c) {
 309   2              case 'A':
 310   2                      LCDDAT = COM0;
 311   2                      break;
 312   2              case 'B':
 313   2                      LCDDAT = COM1;
 314   2                      break;
 315   2              case 'C':
 316   2                      LCDDAT = COM2;
 317   2                      break;
 318   2              case 'D':
 319   2                      LCDDAT = COM3;
 320   2                      break;
 321   2              default:
 322   2      //              LCDPTR = 18;
 323   2      //              LCDDAT = 0;
 324   2                      break;
 325   2              }
 326   1      }
 327          void LCD_Clear_Pulls_Num(void) {
 328   1              clr_SEG8EN;
 329   1              clr_SEG9EN;
 330   1              clr_SEG10EN;
 331   1              clr_SEG11EN;
 332   1              clr_SEG12EN;
 333   1              clr_SEG13EN;
 334   1      
 335   1              LCDPTR = 8;
 336   1              LCDDAT = COM1 + COM2 + COM3;
 337   1      
 338   1              LCDPTR = 9;
 339   1              LCDDAT = COM0 + COM1 + COM2 + COM3;
 340   1      
 341   1              LCDPTR = 10;
 342   1              LCDDAT = COM1 + COM2 + COM3;
 343   1      
 344   1              LCDPTR = 11;
 345   1              LCDDAT = COM0 + COM1 + COM2 + COM3;
 346   1      
 347   1              LCDPTR = 12;
 348   1              LCDDAT = COM1 + COM2 + COM3;
 349   1      
 350   1              LCDPTR = 13;
 351   1              LCDDAT = COM0 + COM1 + COM2 + COM3;
 352   1      }
 353          void LCD_Show_Pulls_Num(uint16_t num) {
 354   1              uint8_t ge;
 355   1              uint8_t shi;
 356   1              uint8_t bai;
 357   1      
 358   1              if (num > 999) {
 359   2      
 360   2                      return;
 361   2              }
 362   1              bai = num / 100;
 363   1              shi = num % 100 / 10;
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       07/14/2017 22:01:00 PAGE 7   

 364   1              ge = num % 10;
 365   1              if (num > 99) {
 366   2                      set_SEG8EN;
 367   2                      set_SEG9EN;
 368   2      
 369   2                      switch (bai) {
 370   3                      case 0:
 371   3                              LCDPTR = 8;
 372   3                              LCDDAT = COM1 + COM3;
 373   3      
 374   3                              LCDPTR = 9;
 375   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
 376   3                              break;
 377   3                      case 1:
 378   3                              LCDPTR = 8;
 379   3                              LCDDAT = 0;
 380   3      
 381   3                              LCDPTR = 9;
 382   3                              LCDDAT = COM1 + COM2;
 383   3                              break;
 384   3                      case 2:
 385   3                              LCDPTR = 8;
 386   3                              LCDDAT = COM2 + COM3;
 387   3      
 388   3                              LCDPTR = 9;
 389   3                              LCDDAT = COM0 + COM1 + COM3;
 390   3                              break;
 391   3                      case 3:
 392   3                              LCDPTR = 8;
 393   3                              LCDDAT = COM2;
 394   3      
 395   3                              LCDPTR = 9;
 396   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
 397   3                              break;
 398   3                      case 4:
 399   3                              LCDPTR = 8;
 400   3                              LCDDAT = COM1 + COM2;
 401   3      
 402   3                              LCDPTR = 9;
 403   3                              LCDDAT = COM1 + COM2;
 404   3                              break;
 405   3                      case 5:
 406   3                              LCDPTR = 8;
 407   3                              LCDDAT = COM1 + COM2;
 408   3      
 409   3                              LCDPTR = 9;
 410   3                              LCDDAT = COM0 + COM2 + COM3;
 411   3                              break;
 412   3                      case 6:
 413   3                              LCDPTR = 8;
 414   3                              LCDDAT = COM1 + COM2 + COM3;
 415   3      
 416   3                              LCDPTR = 9;
 417   3                              LCDDAT = COM0 + COM2 + COM3;
 418   3                              break;
 419   3                      case 7:
 420   3                              LCDPTR = 8;
 421   3                              LCDDAT = 0;
 422   3      
 423   3                              LCDPTR = 9;
 424   3                              LCDDAT = COM0 + COM1 + COM2;
 425   3                              break;
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       07/14/2017 22:01:00 PAGE 8   

 426   3                      case 8:
 427   3                              LCDPTR = 8;
 428   3                              LCDDAT = COM1 + COM2 + COM3;
 429   3      
 430   3                              LCDPTR = 9;
 431   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
 432   3                              break;
 433   3                      case 9:
 434   3                              LCDPTR = 8;
 435   3                              LCDDAT = COM1 + COM2;
 436   3      
 437   3                              LCDPTR = 9;
 438   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
 439   3                              break;
 440   3                      }
 441   2              } else {
 442   2                      clr_SEG8EN;
 443   2                      clr_SEG9EN;
 444   2                      LCDPTR = 8;
 445   2                      LCDDAT = 0;
 446   2      
 447   2                      LCDPTR = 9;
 448   2                      LCDDAT = 0;
 449   2              }
 450   1              if (num > 9) {
 451   2                      set_SEG10EN;
 452   2                      set_SEG11EN;
 453   2      
 454   2                      switch (shi) {
 455   3                      case 0:
 456   3                              LCDPTR = 10;
 457   3                              LCDDAT = COM1 + COM3;
 458   3      
 459   3                              LCDPTR = 11;
 460   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
 461   3                              break;
 462   3                      case 1:
 463   3                              LCDPTR = 10;
 464   3                              LCDDAT = 0;
 465   3      
 466   3                              LCDPTR = 11;
 467   3                              LCDDAT = COM1 + COM2;
 468   3                              break;
 469   3                      case 2:
 470   3                              LCDPTR = 10;
 471   3                              LCDDAT = COM2 + COM3;
 472   3      
 473   3                              LCDPTR = 11;
 474   3                              LCDDAT = COM0 + COM1 + COM3;
 475   3                              break;
 476   3                      case 3:
 477   3                              LCDPTR = 10;
 478   3                              LCDDAT = COM2;
 479   3      
 480   3                              LCDPTR = 11;
 481   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
 482   3                              break;
 483   3                      case 4:
 484   3                              LCDPTR = 10;
 485   3                              LCDDAT = COM1 + COM2;
 486   3      
 487   3                              LCDPTR = 11;
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       07/14/2017 22:01:00 PAGE 9   

 488   3                              LCDDAT = COM1 + COM2;
 489   3                              break;
 490   3                      case 5:
 491   3                              LCDPTR = 10;
 492   3                              LCDDAT = COM1 + COM2;
 493   3      
 494   3                              LCDPTR = 11;
 495   3                              LCDDAT = COM0 + COM2 + COM3;
 496   3                              break;
 497   3                      case 6:
 498   3                              LCDPTR = 10;
 499   3                              LCDDAT = COM1 + COM2 + COM3;
 500   3      
 501   3                              LCDPTR = 11;
 502   3                              LCDDAT = COM0 + COM2 + COM3;
 503   3                              break;
 504   3                      case 7:
 505   3                              LCDPTR = 10;
 506   3                              LCDDAT = 0;
 507   3      
 508   3                              LCDPTR = 11;
 509   3                              LCDDAT = COM0 + COM1 + COM2;
 510   3                              break;
 511   3                      case 8:
 512   3                              LCDPTR = 10;
 513   3                              LCDDAT = COM1 + COM2 + COM3;
 514   3      
 515   3                              LCDPTR = 11;
 516   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
 517   3                              break;
 518   3                      case 9:
 519   3                              LCDPTR = 10;
 520   3                              LCDDAT = COM1 + COM2;
 521   3      
 522   3                              LCDPTR = 11;
 523   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
 524   3                              break;
 525   3                      }
 526   2              } else {
 527   2                      clr_SEG10EN;
 528   2                      clr_SEG11EN;
 529   2                      LCDPTR = 10;
 530   2                      LCDDAT = 0;
 531   2      
 532   2                      LCDPTR = 11;
 533   2                      LCDDAT = 0;
 534   2              }
 535   1              set_SEG12EN;
 536   1              set_SEG13EN;
 537   1              switch (ge) {
 538   2              case 0:
 539   2                      LCDPTR = 12;
 540   2                      LCDDAT = COM1 + COM3;
 541   2      
 542   2                      LCDPTR = 13;
 543   2                      LCDDAT = COM0 + COM1 + COM2 + COM3;
 544   2                      break;
 545   2              case 1:
 546   2                      LCDPTR = 12;
 547   2                      LCDDAT = 0;
 548   2      
 549   2                      LCDPTR = 13;
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       07/14/2017 22:01:00 PAGE 10  

 550   2                      LCDDAT = COM1 + COM2;
 551   2                      break;
 552   2              case 2:
 553   2                      LCDPTR = 12;
 554   2                      LCDDAT = COM2 + COM3;
 555   2      
 556   2                      LCDPTR = 13;
 557   2                      LCDDAT = COM0 + COM1 + COM3;
 558   2                      break;
 559   2              case 3:
 560   2                      LCDPTR = 12;
 561   2                      LCDDAT = COM2;
 562   2      
 563   2                      LCDPTR = 13;
 564   2                      LCDDAT = COM0 + COM1 + COM2 + COM3;
 565   2                      break;
 566   2              case 4:
 567   2                      LCDPTR = 12;
 568   2                      LCDDAT = COM1 + COM2;
 569   2      
 570   2                      LCDPTR = 13;
 571   2                      LCDDAT = COM1 + COM2;
 572   2                      break;
 573   2              case 5:
 574   2                      LCDPTR = 12;
 575   2                      LCDDAT = COM1 + COM2;
 576   2      
 577   2                      LCDPTR = 13;
 578   2                      LCDDAT = COM0 + COM2 + COM3;
 579   2                      break;
 580   2              case 6:
 581   2                      LCDPTR = 12;
 582   2                      LCDDAT = COM1 + COM2 + COM3;
 583   2      
 584   2                      LCDPTR = 13;
 585   2                      LCDDAT = COM0 + COM2 + COM3;
 586   2                      break;
 587   2              case 7:
 588   2                      LCDPTR = 12;
 589   2                      LCDDAT = 0;
 590   2      
 591   2                      LCDPTR = 13;
 592   2                      LCDDAT = COM0 + COM1 + COM2;
 593   2                      break;
 594   2              case 8:
 595   2                      LCDPTR = 12;
 596   2                      LCDDAT = COM1 + COM2 + COM3;
 597   2      
 598   2                      LCDPTR = 13;
 599   2                      LCDDAT = COM0 + COM1 + COM2 + COM3;
 600   2                      break;
 601   2              case 9:
 602   2                      LCDPTR = 12;
 603   2                      LCDDAT = COM1 + COM2;
 604   2      
 605   2                      LCDPTR = 13;
 606   2                      LCDDAT = COM0 + COM1 + COM2 + COM3;
 607   2                      break;
 608   2              }
 609   1      }
 610          void LCD_Clear_QS_ICO(void) {
 611   1              clr_SEG2EN;
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       07/14/2017 22:01:00 PAGE 11  

 612   1              LCDPTR = 2;
 613   1              LCDDAT = COM0;
 614   1      }
 615          void LCD_Show_QS_ICO(void) {
 616   1              set_SEG2EN;
 617   1              LCDPTR = 2;
 618   1              LCDDAT = COM0;
 619   1      }
 620          void LCD_Clear_COACH_ICO(void) {
 621   1              clr_SEG4EN;
 622   1              LCDPTR = 4;
 623   1              LCDDAT = COM0;
 624   1      }
 625          void LCD_Show_COACH_ICO(void) {
 626   1              set_SEG4EN;
 627   1              LCDPTR = 4;
 628   1              LCDDAT = COM0;
 629   1      }
 630          void LCD_Clear_Line_down(void) {
 631   1              clr_SEG8EN;
 632   1              LCDPTR = 8;
 633   1              LCDDAT = COM0;
 634   1      }
 635          void LCD_Show_Line_down(void) {
 636   1              set_SEG8EN;
 637   1              LCDPTR = 8;
 638   1              LCDDAT = COM0;
 639   1      }
 640          void LCD_Clear_Heart_ICO(void) {
 641   1              clr_SEG0EN;
 642   1              LCDPTR = 0;
 643   1              LCDDAT = COM0;
 644   1      }
 645          void LCD_Show_Heart_ICO(void) {
 646   1              set_SEG0EN;
 647   1              LCDPTR = 0;
 648   1              LCDDAT = COM0;
 649   1      }
 650          void LCD_Clear_CAL_Num(void) {
 651   1              clr_SEG0EN;
 652   1              clr_SEG1EN;
 653   1              clr_SEG2EN;
 654   1              clr_SEG3EN;
 655   1              clr_SEG4EN;
 656   1              clr_SEG5EN;
 657   1              clr_SEG6EN;
 658   1              clr_SEG7EN;
 659   1      
 660   1              LCDPTR = 0;
 661   1              LCDDAT = COM1 + COM2 + COM3;
 662   1      
 663   1              LCDPTR = 1;
 664   1              LCDDAT = COM0 + COM1 + COM2 + COM3;
 665   1      
 666   1              LCDPTR = 2;
 667   1              LCDDAT = COM1 + COM2 + COM3;
 668   1      
 669   1              LCDPTR = 3;
 670   1              LCDDAT = COM0 + COM1 + COM2 + COM3;
 671   1      
 672   1              LCDPTR = 4;
 673   1              LCDDAT = COM1 + COM2 + COM3;
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       07/14/2017 22:01:00 PAGE 12  

 674   1      
 675   1              LCDPTR = 5;
 676   1              LCDDAT = COM0 + COM1 + COM2 + COM3;
 677   1      
 678   1              LCDPTR = 6;
 679   1              LCDDAT = COM1 + COM2 + COM3;
 680   1      
 681   1              LCDPTR = 7;
 682   1              LCDDAT = COM0 + COM1 + COM2 + COM3;
 683   1      }
 684          void LCD_Show_CAL_Num(uint16_t num) {
 685   1              uint8_t ge;
 686   1              uint8_t shi;
 687   1              uint8_t bai;
 688   1              uint8_t qian;
 689   1      
 690   1              if (num > 9999) {
 691   2      
 692   2                      return;
 693   2              }
 694   1              qian = num / 1000;
 695   1              bai = num % 1000 / 100;
 696   1              shi = num % 100 / 10;
 697   1              ge = num % 10;
 698   1              if (num > 999) {
 699   2                      set_SEG0EN;
 700   2                      set_SEG1EN;
 701   2      
 702   2                      switch (qian) {
 703   3                      case 0:
 704   3                              LCDPTR = 0;
 705   3                              LCDDAT = COM1 + COM3;
 706   3      
 707   3                              LCDPTR = 1;
 708   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
 709   3                              break;
 710   3                      case 1:
 711   3                              LCDPTR = 0;
 712   3                              LCDDAT = 0;
 713   3      
 714   3                              LCDPTR = 1;
 715   3                              LCDDAT = COM1 + COM2;
 716   3                              break;
 717   3                      case 2:
 718   3                              LCDPTR = 0;
 719   3                              LCDDAT = COM2 + COM3;
 720   3      
 721   3                              LCDPTR = 1;
 722   3                              LCDDAT = COM0 + COM1 + COM3;
 723   3                              break;
 724   3                      case 3:
 725   3                              LCDPTR = 0;
 726   3                              LCDDAT = COM2;
 727   3      
 728   3                              LCDPTR = 1;
 729   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
 730   3                              break;
 731   3                      case 4:
 732   3                              LCDPTR = 0;
 733   3                              LCDDAT = COM1 + COM2;
 734   3      
 735   3                              LCDPTR = 1;
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       07/14/2017 22:01:00 PAGE 13  

 736   3                              LCDDAT = COM1 + COM2;
 737   3                              break;
 738   3                      case 5:
 739   3                              LCDPTR = 0;
 740   3                              LCDDAT = COM1 + COM2;
 741   3      
 742   3                              LCDPTR = 1;
 743   3                              LCDDAT = COM0 + COM2 + COM3;
 744   3                              break;
 745   3                      case 6:
 746   3                              LCDPTR = 0;
 747   3                              LCDDAT = COM1 + COM2 + COM3;
 748   3      
 749   3                              LCDPTR = 1;
 750   3                              LCDDAT = COM0 + COM2 + COM3;
 751   3                              break;
 752   3                      case 7:
 753   3                              LCDPTR = 0;
 754   3                              LCDDAT = 0;
 755   3      
 756   3                              LCDPTR = 1;
 757   3                              LCDDAT = COM0 + COM1 + COM2;
 758   3                              break;
 759   3                      case 8:
 760   3                              LCDPTR = 0;
 761   3                              LCDDAT = COM1 + COM2 + COM3;
 762   3      
 763   3                              LCDPTR = 1;
 764   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
 765   3                              break;
 766   3                      case 9:
 767   3                              LCDPTR = 0;
 768   3                              LCDDAT = COM1 + COM2;
 769   3      
 770   3                              LCDPTR = 1;
 771   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
 772   3                              break;
 773   3                      }
 774   2              } else {
 775   2                      clr_SEG0EN;
 776   2                      clr_SEG1EN;
 777   2                      LCDPTR = 0;
 778   2                      LCDDAT = 0;
 779   2      
 780   2                      LCDPTR = 1;
 781   2                      LCDDAT = 0;
 782   2              }
 783   1              if (num > 99) {
 784   2                      set_SEG2EN;
 785   2                      set_SEG3EN;
 786   2      
 787   2                      switch (bai) {
 788   3                      case 0:
 789   3                              LCDPTR = 2;
 790   3                              LCDDAT = COM1 + COM3;
 791   3      
 792   3                              LCDPTR = 3;
 793   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
 794   3                              break;
 795   3                      case 1:
 796   3                              LCDPTR = 2;
 797   3                              LCDDAT = 0;
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       07/14/2017 22:01:00 PAGE 14  

 798   3      
 799   3                              LCDPTR = 3;
 800   3                              LCDDAT = COM1 + COM2;
 801   3                              break;
 802   3                      case 2:
 803   3                              LCDPTR = 2;
 804   3                              LCDDAT = COM2 + COM3;
 805   3      
 806   3                              LCDPTR = 3;
 807   3                              LCDDAT = COM0 + COM1 + COM3;
 808   3                              break;
 809   3                      case 3:
 810   3                              LCDPTR = 2;
 811   3                              LCDDAT = COM2;
 812   3      
 813   3                              LCDPTR = 3;
 814   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
 815   3                              break;
 816   3                      case 4:
 817   3                              LCDPTR = 2;
 818   3                              LCDDAT = COM1 + COM2;
 819   3      
 820   3                              LCDPTR = 3;
 821   3                              LCDDAT = COM1 + COM2;
 822   3                              break;
 823   3                      case 5:
 824   3                              LCDPTR = 2;
 825   3                              LCDDAT = COM1 + COM2;
 826   3      
 827   3                              LCDPTR = 3;
 828   3                              LCDDAT = COM0 + COM2 + COM3;
 829   3                              break;
 830   3                      case 6:
 831   3                              LCDPTR = 2;
 832   3                              LCDDAT = COM1 + COM2 + COM3;
 833   3      
 834   3                              LCDPTR = 3;
 835   3                              LCDDAT = COM0 + COM2 + COM3;
 836   3                              break;
 837   3                      case 7:
 838   3                              LCDPTR = 2;
 839   3                              LCDDAT = 0;
 840   3      
 841   3                              LCDPTR = 3;
 842   3                              LCDDAT = COM0 + COM1 + COM2;
 843   3                              break;
 844   3                      case 8:
 845   3                              LCDPTR = 2;
 846   3                              LCDDAT = COM1 + COM2 + COM3;
 847   3      
 848   3                              LCDPTR = 3;
 849   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
 850   3                              break;
 851   3                      case 9:
 852   3                              LCDPTR = 2;
 853   3                              LCDDAT = COM1 + COM2;
 854   3      
 855   3                              LCDPTR = 3;
 856   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
 857   3                              break;
 858   3                      }
 859   2              } else {
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       07/14/2017 22:01:00 PAGE 15  

 860   2                      clr_SEG2EN;
 861   2                      clr_SEG3EN;
 862   2                      LCDPTR = 2;
 863   2                      LCDDAT = 0;
 864   2      
 865   2                      LCDPTR = 3;
 866   2                      LCDDAT = 0;
 867   2              }
 868   1              if (num > 9) {
 869   2                      set_SEG4EN;
 870   2                      set_SEG5EN;
 871   2      
 872   2                      switch (shi) {
 873   3                      case 0:
 874   3                              LCDPTR = 4;
 875   3                              LCDDAT = COM1 + COM3;
 876   3      
 877   3                              LCDPTR = 5;
 878   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
 879   3                              break;
 880   3                      case 1:
 881   3                              LCDPTR = 4;
 882   3                              LCDDAT = 0;
 883   3      
 884   3                              LCDPTR = 5;
 885   3                              LCDDAT = COM1 + COM2;
 886   3                              break;
 887   3                      case 2:
 888   3                              LCDPTR = 4;
 889   3                              LCDDAT = COM2 + COM3;
 890   3      
 891   3                              LCDPTR = 5;
 892   3                              LCDDAT = COM0 + COM1 + COM3;
 893   3                              break;
 894   3                      case 3:
 895   3                              LCDPTR = 4;
 896   3                              LCDDAT = COM2;
 897   3      
 898   3                              LCDPTR = 5;
 899   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
 900   3                              break;
 901   3                      case 4:
 902   3                              LCDPTR = 4;
 903   3                              LCDDAT = COM1 + COM2;
 904   3      
 905   3                              LCDPTR = 5;
 906   3                              LCDDAT = COM1 + COM2;
 907   3                              break;
 908   3                      case 5:
 909   3                              LCDPTR = 4;
 910   3                              LCDDAT = COM1 + COM2;
 911   3      
 912   3                              LCDPTR = 5;
 913   3                              LCDDAT = COM0 + COM2 + COM3;
 914   3                              break;
 915   3                      case 6:
 916   3                              LCDPTR = 4;
 917   3                              LCDDAT = COM1 + COM2 + COM3;
 918   3      
 919   3                              LCDPTR = 5;
 920   3                              LCDDAT = COM0 + COM2 + COM3;
 921   3                              break;
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       07/14/2017 22:01:00 PAGE 16  

 922   3                      case 7:
 923   3                              LCDPTR = 4;
 924   3                              LCDDAT = 0;
 925   3      
 926   3                              LCDPTR = 5;
 927   3                              LCDDAT = COM0 + COM1 + COM2;
 928   3                              break;
 929   3                      case 8:
 930   3                              LCDPTR = 4;
 931   3                              LCDDAT = COM1 + COM2 + COM3;
 932   3      
 933   3                              LCDPTR = 5;
 934   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
 935   3                              break;
 936   3                      case 9:
 937   3                              LCDPTR = 4;
 938   3                              LCDDAT = COM1 + COM2;
 939   3      
 940   3                              LCDPTR = 5;
 941   3                              LCDDAT = COM0 + COM1 + COM2 + COM3;
 942   3                              break;
 943   3                      }
 944   2              } else {
 945   2                      clr_SEG4EN;
 946   2                      clr_SEG5EN;
 947   2                      LCDPTR = 4;
 948   2                      LCDDAT = 0;
 949   2      
 950   2                      LCDPTR = 5;
 951   2                      LCDDAT = 0;
 952   2              }
 953   1      
 954   1              set_SEG6EN;
 955   1              set_SEG7EN;
 956   1              switch (ge) {
 957   2              case 0:
 958   2                      LCDPTR = 6;
 959   2                      LCDDAT = COM1 + COM3;
 960   2      
 961   2                      LCDPTR = 7;
 962   2                      LCDDAT = COM0 + COM1 + COM2 + COM3;
 963   2                      break;
 964   2              case 1:
 965   2                      LCDPTR = 6;
 966   2                      LCDDAT = 0;
 967   2      
 968   2                      LCDPTR = 7;
 969   2                      LCDDAT = COM1 + COM2;
 970   2                      break;
 971   2              case 2:
 972   2                      LCDPTR = 6;
 973   2                      LCDDAT = COM2 + COM3;
 974   2      
 975   2                      LCDPTR = 7;
 976   2                      LCDDAT = COM0 + COM1 + COM3;
 977   2                      break;
 978   2              case 3:
 979   2                      LCDPTR = 6;
 980   2                      LCDDAT = COM2;
 981   2      
 982   2                      LCDPTR = 7;
 983   2                      LCDDAT = COM0 + COM1 + COM2 + COM3;
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       07/14/2017 22:01:00 PAGE 17  

 984   2                      break;
 985   2              case 4:
 986   2                      LCDPTR = 6;
 987   2                      LCDDAT = COM1 + COM2;
 988   2      
 989   2                      LCDPTR = 7;
 990   2                      LCDDAT = COM1 + COM2;
 991   2                      break;
 992   2              case 5:
 993   2                      LCDPTR = 6;
 994   2                      LCDDAT = COM1 + COM2;
 995   2      
 996   2                      LCDPTR = 7;
 997   2                      LCDDAT = COM0 + COM2 + COM3;
 998   2                      break;
 999   2              case 6:
1000   2                      LCDPTR = 6;
1001   2                      LCDDAT = COM1 + COM2 + COM3;
1002   2      
1003   2                      LCDPTR = 7;
1004   2                      LCDDAT = COM0 + COM2 + COM3;
1005   2                      break;
1006   2              case 7:
1007   2                      LCDPTR = 6;
1008   2                      LCDDAT = 0;
1009   2      
1010   2                      LCDPTR = 7;
1011   2                      LCDDAT = COM0 + COM1 + COM2;
1012   2                      break;
1013   2              case 8:
1014   2                      LCDPTR = 6;
1015   2                      LCDDAT = COM1 + COM2 + COM3;
1016   2      
1017   2                      LCDPTR = 7;
1018   2                      LCDDAT = COM0 + COM1 + COM2 + COM3;
1019   2                      break;
1020   2              case 9:
1021   2                      LCDPTR = 6;
1022   2                      LCDDAT = COM1 + COM2;
1023   2      
1024   2                      LCDPTR = 7;
1025   2                      LCDDAT = COM0 + COM1 + COM2 + COM3;
1026   2                      break;
1027   2              }
1028   1      }
1029          void LCD_Clear_CAL_ICO(void) {
1030   1              clr_SEG6EN;
1031   1              LCDPTR = 6;
1032   1              LCDDAT = COM0;
1033   1      }
1034          void LCD_Show_CAL_ICO(void) {
1035   1              set_SEG6EN;
1036   1              LCDPTR = 6;
1037   1              LCDDAT = COM0;
1038   1      }
1039          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2292    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       5
C51 COMPILER V9.56.0.0   BSP_DISPLAY                                                       07/14/2017 22:01:00 PAGE 18  

   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
