C51 COMPILER V9.56.0.0   MAIN                                                              07/29/2017 23:42:29 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Out\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\App\src\main.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Common\inc;..
                    -\App\inc;..\Bsp\inc;..\Startup;..\Bsp) DEFINE(FOSC_110592) DEBUG OBJECTEXTEND PRINT(.\Out\Listings\main.lst) OBJECT(.\Ou
                    -t\Objects\main.obj)

line level    source

   1          #include "app.h"
   2          #include "app_charge.h"
   3          //uint8_t c;
   4          //DEVICE_T g_tDevice;
   5          /******************************************************************************
   6           * FUNCTION_PURPOSE: ADC interrupt Service Routine
   7           ******************************************************************************/
   8          void ADC_ISR(void) interrupt 11
   9          {
  10   1              clr_ADCF;                               //clear ADC interrupt flag
  11   1              app_battery_voltage_result();
  12   1      //      app_charge_100ms_pro();
  13   1      }
  14          /******************************************************************************
  15           * FUNCTION_PURPOSE: I/O Pin interrupt Service Routine
  16           ******************************************************************************/
  17          void PinInterrupt_ISR(void)
  18          interrupt 7
  19          {
  20   1      
  21   1              if (PIF & 0x08) {
  22   2      
  23   2                      if (g_tDevice.status == E_PowerDown) {
  24   3      
  25   3                              g_tDevice.status = E_PowerReady;
  26   3      
  27   3                      }
  28   2      
  29   2              }
  30   1      
  31   1              PIF = 0x00;                             //clear interrupt flag
  32   1      }
  33          void main(void) {
  34   1              uint8_t ucKeyCode;
  35   1              System_Clock_Select(E_HIRCEN);
  36   1      
  37   1      #if  0
                      CKDIV = 1;                        //Fsys = Fosc / (2* CLKDIV) = Fcpu
              #endif
  40   1      
  41   1              /****************/
  42   1              bsp_Init();
  43   1      
  44   1              /****************/
  45   1              work_Init();
  46   1              app_key_init();
  47   1              app_charge_Init();
  48   1      
  49   1              /****************/
  50   1              Show_FW_Version_Number_To_PC();
  51   1      
  52   1              while (1) {
  53   2      
C51 COMPILER V9.56.0.0   MAIN                                                              07/29/2017 23:42:29 PAGE 2   

  54   2                      if (Task_time.flag_10ms) {
  55   3                              Task_time.flag_10ms = 0;
  56   3                              //////////////////
  57   3                              BEEP_Pro();
  58   3                              bsp_KeyScan();
  59   3                      }
  60   2                      if (Task_time.flag_100ms) {
  61   3                              Task_time.flag_100ms = 0;
  62   3                              //////////////////
  63   3                              app_key_100ms_pro();
  64   3                              app_work_100ms_pro();
  65   3                              app_charge_100ms_pro();
  66   3                              Repeat_Pro();
  67   3      
  68   3                      }
  69   2                      if (Task_time.flag_1s) {
  70   3                              static uint8_t tmp = 0;
  71   3                              static uint8_t cnt = 0;
  72   3                              Task_time.flag_1s = 0;
  73   3                              //////////////////
  74   3                              app_key_1s_pro();
  75   3                              app_work_1s_pro();
  76   3                              app_charge_1s_pro();
  77   3                              app_battery_1s_pro();
  78   3      
  79   3                              cnt++;
  80   3                              if (cnt > 3) {
  81   4                                      cnt = 10;
  82   4      
  83   4                                      tmp++;
  84   4      //                              LCD_Show_REP_Num(tmp % 99);
  85   4      //                              LCD_Show_Pulls_Num(tmp);
  86   4      //                              LCD_Show_CAL_Num(tmp);
  87   4                              }
  88   3      
  89   3      //                      if (bb) {
  90   3      //                              bb = 0;
  91   3      //                              LCD_Display_Battery_ICO();
  92   3      //                              LCD_Display_REP_ICO();
  93   3      //                              LCD_Display_ABCD('A');
  94   3      //                              LCD_Display_QS_ICO();
  95   3      //                              LCD_Display_COACH_ICO();
  96   3      //                              LCD_Display_Heart_ICO();
  97   3      //                              LCD_Display_CAL_ICO();
  98   3      //
  99   3      //                      } else {
 100   3      //                              bb = 1;
 101   3      //                              LCD_Clear_Battery_ICO();
 102   3      //                              LCD_Clear_REP_ICO();
 103   3      //                              LCD_Clear_ABCD();
 104   3      //                              LCD_Clear_QS_ICO();
 105   3      //                              LCD_Clear_COACH_ICO();
 106   3      //                              LCD_Clear_Heart_ICO();
 107   3      //                              LCD_Clear_CAL_ICO();
 108   3      
 109   3      //
 110   3      //                      }
 111   3                      }
 112   2      #if 0
                              if (TRUE == Get_Data_From_UART1(&c)) {
              
                                      printf("true %x\n", c);
C51 COMPILER V9.56.0.0   MAIN                                                              07/29/2017 23:42:29 PAGE 3   

              
                                      if (c) {
                                              BEEP_Start(0, 5, 5, 2);
                                      } else {
                                              BEEP_Start(0, 5, 5, 1);
                                      }
                              }
              #endif
 124   2      #if 1
 125   2      
 126   2                      ucKeyCode = bsp_GetKey();
 127   2                      if (ucKeyCode != KEY_NONE) {
 128   3                              app_key_pro(ucKeyCode);
 129   3                      }
 130   2      #endif
 131   2              }
 132   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    208    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      2       1
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
